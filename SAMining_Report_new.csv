URL,README,ChatGPTAnswer
https://github.com/OpenAADL/ocarina,"Ocarina AADL toolset  |docs|
====================

Latest release: |release|

Citable Reference: |zenodo|

::

  @software{ocarina_v2021_1,
   author       = {OpenAADL},
   title        = {OpenAADL/ocarina: 2021.1},
   month        = sep,
   year         = 2021,
   version      = {v2021.1},
   doi          = {10.5281/zenodo.5459517},
   url          = {https://doi.org/10.5281/zenodo.5459517}
  }

About:
------

Ocarina is an AADL model processor, it acts as a ""compiler"" for AADL models.

As a front-end, it supports

* AADLv2 language from `AS5506C standard <http://standards.sae.org/as5506c/>`_,
* the Behavioral annex from `AS5506/1 standard <http://standards.sae.org/as5506/a/>`_
* the ARINC653 and the EMV2 annexes from `AS5506/1A standard <http://standards.sae.org/as5506/1a/>`_

As a back-end, it supports

* Code generation towards the AADL runtime `PolyORB-HI/Ada <https://github.com/OpenAADL/polyorb-hi-ada>`_ and `PolyORB-HI/C <https://github.com/OpenAADL/polyorb-hi-c>`_, and ARINC653 compliant APEX, following recommendations from `AS5506/2 standard <http://standards.sae.org/as5506/2/>`_
* WCET analysis, using `Bound-T <http://bound-t.com>`_
* Scheduling analysis, using `Cheddar <http://beru.univ-brest.fr/~singhoff/cheddar/>`_ and `MAST <http://mast.unican.es>`_
* Model checking, using Petri Net `Tina <http://projects.laas.fr/tina//>`_, and `LNT <http://cadp.inria.fr>`_
* Constraint analysis, using the REAL annex language

It can be integrated with the `AADLib <https://github.com/OpenAADL/AADLib>`_ library of AADL components.

It can also be embedded in AADL editors: in `OSATE <http://osate.org>`_ using the `OSATE2 plugin <https://github.com/OpenAADL/osate2-ocarina>`_, and `AADL Inspector <http://www.ellidiss.fr/public/wiki/wiki/inspector>`_ or advanced system processing suite like `TASTE by the European Space Agency <https://www.taste.tools>`_

Installation:
-------------

Refer to the  `ocarina-build <https://github.com/openaadl/ocarina-build>`_ companion project for details.

Q&A:
----

+----------------------------------+---------------+
| Build status GitHub actions      ||github|       |
+----------------------------------+---------------+
| Code coverage                    | |coverage|    |
+----------------------------------+---------------+
| CII Best practice                | |cii|         |
+----------------------------------+---------------+

.. |github| image:: https://github.com/OpenAADL/ocarina/workflows/Ocarina/badge.svg
  :target: https://github.com/OpenAADL/ocarina/actions?query=workflow%3AOcarina

.. |docs| image:: https://readthedocs.org/projects/docs/badge/?version=latest
    :alt: Documentation Status
    :scale: 100%
    :target: http://ocarina.readthedocs.org/

.. |coverage| image:: https://codecov.io/github/OpenAADL/ocarina/coverage.svg?branch=master
  :target: https://codecov.io/gh/OpenAADL/ocarina
  :alt: Code Coverage

.. |release| image:: https://img.shields.io/github/release/OpenAADL/ocarina.svg
  :target: https://github.com/OpenAADL/ocarina/releases
  :alt: GitHub Releases

.. |cii| image:: https://bestpractices.coreinfrastructure.org/projects/1019/badge
  :target: https://bestpractices.coreinfrastructure.org/projects/1019
  :alt: CII Best practice
  
.. |zenodo| image:: https://zenodo.org/badge/7610156.svg
   :target: https://zenodo.org/badge/latestdoi/7610156
  
","layered architecture, microservices architecture"
https://github.com/OpenAADL/AADLib,"# AADLib - A library of AADL components

## About

AADLib is a library of reusable AADLv2 components, associated property sets and validation theorems based on REAL. It has been defined to work properly with [Ocarina](https://github.com/OpenAADL/ocarina), [AADL-Inspector](http://www.ellidiss.com/products/aadl-inspector/) and [OSATE](http://osate.org).

## Installation

### Ocarina

The recommended installation process is through the proper configuration and installation of [Ocarina](https://github.com/OpenAADL/ocarina), see Ocarina documentation for details.

### OSATE

Simply import the AADLib repository as an AADL project

### AADL Inspector

Import the AADLib examples through the GitHub import facility

## Q&A

Build status ![Ocarina / Ubuntu (default GNAT)](https://github.com/OpenAADL/AADLib/workflows/Ocarina%20/%20Ubuntu%20(default%20GNAT)/badge.svg)
",layered architecture
https://github.com/cmu-sei/AASPE,"Automated Assurance of Security Policy Enforcement (AASPE)
==========================================================


# About the tools
The AASPE tools are designed for making secure and safe safety-critical systems. The tools are using AADL and the OSATE toolset. It provides the following features:
 - Attack Impact meta-model
 - Attack Impact graphical editor
 - Attack Tree editor meta-model
 - Attack Tree graphical editor
 - Bridge from Attack Impact to Attack Tree
 - Bridge from AADL to Attack Impact


# Installing the tools

## Step by step version

### Step 1: Download ans install OSATE
Go on OSATE [official website](http://www.osate.org) and download it.
Unzip the product on your laptop.

## Step 2: Start OSATE

Once OSATE is installed, double click on the executable to launch it.

## Step 3: Install the security tools

In the Help menu, select Install New Components, as shown below.

![InstallStep1](edu.cmu.aaspe.help/resources/markdown/imgs/install-step1.png ""Installation step1"")


Select the experimental website http://aadl.info/aadl/osate/experimental/
Once the list of available components is shown, select the AASPE tools, as below. Accept the license, confirm and restart OSATE.

![InstallStep2](edu.cmu.aaspe.help/resources/markdown/imgs/install-step2.png ""Installation step2"")


## TL;DR version
To install the tools, you can use the update site
and select what you want to install in Eclipse.

Use the update site of the [experimental version of osate](http://www.osate.org). The URL of the experimental features is: http://aadl.info/aadl/osate/experimental/



# Examples
Examples to exercise the tools are available in the [edu.cmu.aaspe.examples](https://github.com/cmu-sei/AASPE/tree/master/edu.cmu.aaspe.examples) project.
You can import it in eclipse or view it directly on github.


# Documentation
You can get documentation inside the tool (in the OSATE help) or get it directly by browsing the [related github documentation project](https://github.com/cmu-sei/AASPE/tree/master/edu.cmu.aaspe.help/resources/markdown)
",layered architecture
https://github.com/juli1/aadl-book,"AADL book - examples
====================

These are the examples for the AADL book.

Buy the book online: https://www.amazon.com/dp/B071WHRJY3

Official book website: http://aadl-book.com/


",N/A
https://github.com/OpenAADL/Crazyflie,"# Crazyflie AADL Case Study

AADL models for the Crazyflie UAV, demonstrating various AADL toolchains

***Note:*** This model is used as part of Georgia Tech OMSCS Class CS7639.

## About

This set of models has been built as part of various classes on AADL.
This model captures the high-level elements of the [Crazyflie
UAV](https://www.bitcraze.io) by the bitcraze. It aims at illustrating
basic CPS designs capabilities of AADL: model construction, analysis
(flow latency, schedulability, fault analysis, code generation, ...)

This project has been defined to work properly with
[Ocarina](https://github.com/OpenAADL/ocarina),
[AADL-Inspector](http://www.ellidiss.com/products/aadl-inspector/) and
[OSATE](http://osate.org)

## Structure

This model is organized as follows
- `diagrams`: graphical representation of the models, used by OSATE
- `library`: reusable AADL models
- `models`: core AADL models of the Crazyflie UAV

## Use with OSATE

### Import

Simply import the GitHub project directly from OSATE, using the following menus:

  `File` -> `Import` -> `Git` -> `Projects from Git`

then, indicate the project URI

### Available analysis

The following capabilities of OSATE are demonstrated:
- text editing
- graphical model browsing/editing
- flow latency analysis
- fault analysis, including fault tree analysis

## Use with AADL Inspector

### Import

Load the project file `crazyflie.aic` from the `models` folder

### Available analysis

The following capabilities of AADL Inspector are demonstrated:
- text editing
- schedulability analysis using Cheddar
- model simulation using Marzhin

## Use with Ocarina

Use the provided makefile, type `make help` for details

## Q&A

This model has been tested with

|Tool           | Version |
|---------------|---------|
| OSATE         | 2.7.0   |
| AADLInspector | 1.6     |
| Ocarina       | 2017.x  |
","layered architecture, service-oriented architecture (SOA)"
https://github.com/cmu-sei/eraces,"# ERACES
The ERACES project is a research project done at the 
Carnegie Mellon Software Engineering Insitute (SEI).
The goal is to design methods and tools to reduce 
complexity in software models.

We had a focus on two types of models:
 * Behavior Models written with SCADE
 * Architecture Models written with AADL

We designed tools to compute complexity metrics
using these notations. We released these tools under
an open-source license.

This is the list of tools available:
 * scade-metrics: a SCADE plug-in tool to compute complexity
   metrics in SCADE models. You need SCADE to use it
   http://www.esterel-technologies.com/products/scade-suite/

 * aadl-complexity: an OSATE plug-in that identify potential
   architectural issues and produce a report that suggests
   improvement to remove them. You need OSATE to use it:
   https://wiki.sei.cmu.edu/aadl/index.php/Osate_2

","layered architecture, microservices architecture"
https://github.com/Baoyx007/aadl2uppaal,"# A Tool-Chain for Quantitative Evaluation of Uncertainty-Aware Hybrid AADL Designs

This project provides a tool-chain that integrates the open-source AADL tool environment OSATE, NPTA model generator and UPPAAL-SMC to enable the automated performance evaluation and comparison of uncertainty-aware Hybrid AADL designs against various performance queries.

## New Features
- Our Uncertain Hybrid AADL environment supports three kinds of annexes, i.e., **[BLESS](http://bless.santoslab.org/)**, **[Hybrid Annex](http://www.santoslab.org/pub/bless/papers/ha-hilt2014.pdf)**, and our proposed **Uncertain Annex**. Based on these annexes, our tool chain enables the stochastical modeling and quantitative analysis of cyber-physical systems under uncertain environment. 
- Our tool-chain supports the modeling of **non-linear hybrid systems**. 
- The **Uncertain Annex** supports the accurate modeling of both performance variations caused by uncertain environments and performance requirements specified by designers. The designers can use Uncertain annex to describe their uncertain objects using a wide spectrum of programmable distributions (e.g., Gaussian, uniform, Poisson and exponential distributions).
- The tool-chain supports the **automated translation** of AADL designs as well as designers’ requirements into Networks of Priced Timed Automata (NPTA) and performance queries, respectively.
- The tool-chain supports the **quantitative evaluation** of Uncertain Hybrid AADL designs against various properties (e.g., performance and safety queries) based on statistical model checker UPPAAL-SMC.


## Dependencies:

Our tool-chain consists of three key components: modeling tool, AADL translation tool, and quantitative evaluation tool. All these tool are all developed using JAVA. So users should have a JAVA Runtime environment. We suggest the users to install the JAVA Runtime environment **[JAVA 1.8.0](http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html)**.

- **Modeling Tool:** In our tool-chain, we adopt an open-source tool **[OSATE 2.2.1](http://aadl.info/aadl/osate/stable/2.2.1/products/)** for the AADL modeling. To enable the modeling of discrete and continuous behavior modeling, we need to install the **[BLESS plugin](http://www.santoslab.org/pub/bless/downs/tool/edu.ksu.bless.update.zip)** for OSATE. Note that the latest version of **BLESS Annex** supports the syntax checking of  **Hybrid Annex**. Since OSATE is an open-source tool that is maintained by other developers, we do not include it in this project

- **Model Translation Tool:** Our model translation tool is developed using JAVA. It consists of three key parts : i) an XMI parser that can extract the necessary AADL information based on our defined meta-models, ii) a translator based on our one-to-one mapping that can convert the extracted inforamtion into their NPTA counterparts, iii) an NPTA model generator that can generate the NPTA models and corresponding performance queries in XML format. 


- **Evaluation Tool:** In our tool-chain we use the statistical model checker UPPAAL-SMC for the quantitative evaluation of the translated NPTA models. Since this tool is maintained by Uppsala University and Aalborg University, we do not include it in this project. The users can download the **[UPPAAL 4.1.19](http://www.it.uu.se/research/group/darts/uppaal/download/)** from its official site. 


We conducted the experiment using the tool chain under the following environments. We hope it can work under other operating systems and tool versions as well.

- Operating System: Linux 2.6.24 
- Pre-installed software:
  * [OSATE 2.2.1](http://aadl.info/aadl/osate/stable/2.2.1/products/)
  * [BLESS plugin](http://www.santoslab.org/pub/bless/downs/tool/edu.ksu.bless.update.zip) for OSATE (with Hybrid Annex syntax support).
  * [JAVA 1.8.0](http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html)
  * [UPPAAL 4.1.19](http://www.it.uu.se/research/group/darts/uppaal/download/)

## Structures:
```
src
├── aadl2upaal
│   ├── Application.java (main function)
│   ├── aadl
│   ├── parser
│   ├── upaal
│   └── visitor
└── examples
    ├── CTCS_MA
    │   ├── MA_with_U_uppaal.xml
    │   └── MA_with_uncertainty.xml
    └── Bouncing_Ball
    	├── Ball_AADL.xml
        └── Ball_UPPAAL.xml
```
   This project contains all the source files for the translation from Uncertain Hybrid AADL designs to NPTA models as well as two illustrative case studies. The ``aadl2upaal`` directory contains source code for translation. It has the one file (contains the main function) and four sub-directories.
   
* ``Application.java ``: The JAVA file that contains the main function of our translation tool.
* ``aadl ``: The sub-directory contains all the meta-models of Uncertain Hybrid AADL. The meta-models are implemented using JAVA classes. 
* ``parser ``: The sub-directory contains a parser that can concert AADL models in XMI format into meta-model instances of AADL and annexes.
* ``upaal ``: The sub-directory contains all the meta-models for NPTA designs. The NPTA meta-models are implemented using JAVA classes.
* ``visitor ``: The sub-directory contains the JAVA files for the translation from Uncertain Hybrid  AADL designs to NPTA models.  The file **Transform2U** defines all the one-to-one mapping transformation rules from AADL designs to NPTA models. The file **UppaalWriter** is used to generate NPTA models in XML format. The generated NPTA models can be directly evaluated by the tool UPPAAL-SMC.  


To evaluate the efficacy of our tool-chain, we also include two case studies in the sub-directory named ``examples``. For each case studies, the subsub-director contains two XML files. One is for the Uncertain Hybrid AADL design, and the other is the NPTA model generated by our tool-chain. The details are as follows:

* ``CTCS_MA ``: This subsub-directory contains the system model of **CTCS-3 MA** scenario named ``MA_with_uncertainty.xml`` and the automatically generated NPTA model named ``MA_with_U_uppaal.xml ``. 
* ``Bouncing_Ball ``: The XML file ``Ball_AADL.xml`` is the Uncertain Hybrid AADL model of the Bouncing Ball example and the XML file ``Ball_UPPAAL.xml`` is the generated NPTA model for the evaluation.




## Usage:

To demonstrate the usage of our tool-chain, we use the CTCS-3 MA as an example. We assume that you have installed all the dependent software as mentioned before. Typically, the usage of our tool-chain involves following steps：

1. **Modeling** : You can use the OSTAE tool to model your Uncertain Hybrid AADL designs with the BLESS, Hybrid and Uncertain annexes. Since we have done the modeling of the CTCS-3 MA scenario,  in this example you can directly load the AADL model named ``MA_with_uncertainty.aadl`` in OSATE. If you want to extend the model, you can modify the AADL design.
2. **Model Translation** :
	- Export the AADL model designed in step 1 into an XML file. In this example, the XML file ``MA_with_uncertainty.xml`` in the subsub-directory ``eamples/CTCS_MA`` is the AADL model of the CTCS-3 MA example.
	- Since our project only provides the source code for the model transformation from AADL to NPTA, we need to firstly compile such files to get the NPTA generator. You can compile this  project using a JAVA IDE (e.g., Eclipse, Intellij IDEA) or using the following JAVA command:
	```	
	javac src/aadl2upaal/Application 
	```	
	- You can generate the NPTA model for the CTCS-3 MA AADL design using the  following command:
	 ```
	java Application src/examples/MA_with_uncertainty.xml
	  src/examples/MA_with_U_uppaal.xml
	```
3. **Quantitative Evaluation** :
	- Open the generated NPTA model from step 2 using UPPAAL-SMC.
	- Go to the ``Verifier`` panel and select one performance query from the property list. Now you can start the performance evaluation of the CTCS-3 MA design. 

## License
Copyright © 2016 by Yongxiang Bao and Mingsong Chen. All rights reserved.

For more details at [license](LICENCES.txt).

",layered architecture
https://github.com/ORNL/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/OpenAADL/polyorb-hi-c,"# PolyORB-HI/C runtime

## About

PolyORB-HI/C is a high-integrity middleware. It provides core middleware constructs, and must be used in conjunction with code generation from AADL models by [Ocarina](https://github.com/OpenAADL/ocarina).

It is written in C99, and is compatible with the following APIs: RT-POSIX (Linux and OS X), RTEMS, FreeRTOS, Windows, Xenomai and XtratuM.

## Installation

The recommended installation process is through the proper configuration and installation of [Ocarina](https://github.com/OpenAADL/ocarina), see Ocarina documentation for details.

## Q&A

Build status ![Ocarina / Ubuntu (default GNAT)](https://github.com/OpenAADL/polyorb-hi-c/workflows/Ocarina%20/%20Ubuntu%20(default%20GNAT)/badge.svg)
","layered architecture, microservices architecture"
https://github.com/OpenAADL/polyorb-hi-ada,"# PolyORB-HI/Ada runtime

## About

PolyORB-HI/Ada is a high-integrity middleware. It provides core middleware constructs, and must be used in conjunction with code generation from AADL models by [Ocarina](https://github.com/OpenAADL/ocarina).

PolyORB-HI/Ada is implemented in [Ada 2012](http://www.ada2012.org), and is compatible with native and Ravenscar Ada runtimes.
It has been tested on Linux, OS X, Windows and RTEMS.

## Installation

The recommended installation process is through the proper configuration and installation of [Ocarina](https://github.com/OpenAADL/ocarina), see Ocarina documentation for details.

## Q&A

Build status ![Ocarina / Ubuntu (default GNAT)](https://github.com/OpenAADL/polyorb-hi-ada/workflows/Ocarina%20/%20Ubuntu%20(default%20GNAT)/badge.svg)
",layered architecture
https://github.com/DrHAMDANE/TransformationAADL2timedAutomata,"# TransformationAADL2timedAutomata
In this work, we propose an approach for the veriﬁcation of the AADL (Architecture and Analysis Design Language) description. This approach is based in Model Driven Engineering (MDE) and assisted by a toolchain. Indeed, we deﬁne a source meta-model for AADL and a target meta-model for the timed automata formalism; we deﬁne a transformation process in two steps : the ﬁrst is aModel2Model transformation which takes an AADLModel and produces the corresponding timed automata model. The second transformation is a Model2Text transformation which takes a timed automata model and generates a text in ta-format code. This code is accepted by the Uppaal toolbox. The goal of this effort is to insure some properties of AADL models using the Uppaal model checker. A case study has been developed to show the feasibility and validity of the proposed approach. 
","MVC, Model Driven Engineering, MDE, Model2Model transformation, Model2Text transformation"
https://github.com/aadl/summergame,,
https://github.com/khoroshilov/aadl-networking-refmodel,,
https://github.com/santoslab/aadl-translator,"# What is the MDCF Architect?
This is a plugin for [Osate 2](https://wiki.sei.cmu.edu/aadl/index.php/Osate_2) which translates from a selected subset of AADL into code runnable on the [MDCF](http://mdcf.santos.cis.ksu.edu/).  It's developed by Sam Procter at K-State's [SAnToS](http://santoslab.org/) Lab. More complete documentation is available at the [project website](http://santoslab.org/pub/mdcf-architect/).

# Installing
If you just want to use the translator, you just need to install it into OSATE2 using the [update site](http://santoslab.org/pub/mdcf-architect/updatesite/)

# Building with Maven
After cloning, the translator can be built by the command ""mvn install""  Note that the build process requires [Maven](http://maven.apache.org/) (version 3.0+) and [Java](http://www.java.com/en/) (version 1.8+). If you also wish to build the documentation, you'll need [Pygments](http://pygments.org/) (version 1.3+).

# Building with Eclipse
In order to use eclipse you'll need to:

1. Install Java 8+.
2. Follow the steps in the ""Getting Eclipse and XText Environment"" section of [this page](https://wiki.sei.cmu.edu/aadl/index.php/Getting_Osate_2_sources#Getting_the_Eclipse_and_XText_environment).
	* Note: Don't worry about any of the other sections of this page if you're using Eclipse -- getting the sources of everything is handled automatically via the project set file. 
3. Import the project set file (AADL Translator.psf) by going to File, Import... then under ""Team"" select ""Team Project Project""

# License
This project, and its source, are publicly available under the [EPL](http://www.eclipse.org/legal/epl-v10.html), unless otherwise stated in the file header.

# Acknowledgements
This project uses icons from [famfamfam](http://famfamfam.com/lab/icons/silk/)'s silk icon set, and CSS from [Marked.app](http://markedapp.com) by Brett Terpstra. The development of the MDCF Architect is supported in part by
the US National Science Foundation (NSF) awards [CNS-1239543](http://www.nsf.gov/awardsearch/showAward?AWD_ID=1239543), [CNS-1355778](http://www.nsf.gov/awardsearch/showAward?AWD_ID=1355778), and [CNS-1446544](http://www.nsf.gov/awardsearch/showAward?AWD_ID=1446544).

",layered architecture
https://github.com/sireum/v3-awashttps://github.com/hybridsynchaadl/HybridSynchAADL,"# HybridSynchAADL

HybridSynchAADL (Hybrid Synchronous AADL) is a verification tool which presents
HybridSynchAADL modeling language and formal analysis for virtually synchronous
cyber-physical systems with complex control programs, continuous behaviors, and
bounded clock skews, network delays, and execution times.


HybridSynchAADL models are given a formal semantics and analyzed using Maude
with SMT solving, which allows us to represent advanced control programs and
communication features in Maude, while capturing timing uncertainties and
continuous behaviors symbolically with SMT solving. 
","MVVAP architecture, SMT solving, formal analysis"
https://github.com/osate/face2aadl,"# FACE 3.0 to AADL 2.2 translator

",
https://github.com/sireum/act,"# AADL-to-CAmkES Translator (ACT)

[![Actions Status](https://github.com/sireum/act/workflows/CI/badge.svg)](https://github.com/sireum/act/actions)
| :--: |
| <sub><sup>amd64: mac, linux, windows</sup></sub> | 
## Installation

### OSATE Version
* OSATE installation and usage instructions are available on ACT's [update site](https://github.com/sireum/act-plugin-update-site).

### Command Line Version
* Use the following to build ACT's CLI

   ```bash
   git clone --recursive https://github.com/sireum/kekinian.git
   cd kekinian
   bin/build.cmd
   ```
* Run ``bin/sireum aadl act`` (or ``bin/sireum.bat aadl act`` under Windows) to view the available command line options

## Example CLI Usage
The following uses the JSON serialized AIR [file](https://github.com/loonwerks/CASE/blob/7b05fa2916b276d13374624c800ffe6af523dabd/CASE_simple_example_Build/.slang/MC_MissionComputer_Impl_Instance.json) that was generated from the [MissionComputer.Impl](https://github.com/loonwerks/CASE/blob/7b05fa2916b276d13374624c800ffe6af523dabd/CASE_simple_example_Build/MC.aadl#L96) system implementation.

  ```bash
  bin/sireum.bat aadl act -o ./act-output/ CASE/CASE_Simple_Example_V2_Build/.slang/MC_MissionComputer_Impl_Instance.json
  ```
",layered architecture
https://github.com/AFRL-VVCAS/6UCubeSat,"# 6UCubeSat

The files in this repository have been approved for public release.

88ABW-2015-6168",
https://github.com/aadl/sopac,,
https://github.com/osate/ErrorModelV2,"ErrorModelV2
============",
https://github.com/OpenAADL/ocarina-build,"# build_ocarina.sh  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

## About [![GitHub release](https://img.shields.io/github/release/OpenAADL/ocarina-build.svg)](https://github.com/OpenAADL/ocarina-build/releases)

The `build_ocarina.sh` script is a helper program to get source code,
compile, package and test [Ocarina](https://github.com/openaadl/ocarina) on all supported platforms. It relies
on shell constructs to coordinate various activities:

- fetch Ocarina source, with its runtimes [PolyORB-HI/Ada](https://github.com/OpenAADL/polyorb-hi-ada) and
  [PolyORB-HI/C](https://github.com/OpenAADL/polyorb-hi-c), and the [AADLib](https://github.com/OpenAADL/AADLib) library
- compile Ocarina, and install it in a local directory
- run Ocarina testsuites, and eventually collect coverage metrics
- package Ocarina and its runtime
- upload archives

![Shellcheck](https://github.com/OpenAADL/ocarina-build/workflows/Shellcheck/badge.svg)

## Installation

The preferred way to install this script is simply to clone the repository:
 ```
 git clone https://github.com/OpenAADL/ocarina-build.git
 ```

 This will ensure future update of the script in a seamless way.

## Demo

The script aims at automating everything, starting with a fresh-install

![gif](demo.gif)

### Details

The following
 ```
./build_ocarina.sh --scenario=fresh-install --prefix=$PWD/ocarina_install
 ```

builds a fresh copy of Ocarina and install it in `$PWD/ocarina_install`. This is equivalent to

 ```
./build_ocarina.sh --reset --update --configure --build --prefix=$PWD/ocarina_install
 ```

Multiple scenarios exist for nightly builds, CI testings and others.

## Usage

```
Usage: ./build_ocarina.sh [switches]

General commands
 -h | --help        : print usage
 --version          : return script version, as a git hash
 --self-update      : update this script
 --install_crontab  : install crontab, then exit
 --purge            : delete source and build directories
 --verbose          : return full log of each action

Script commands
 -c | --configure   : configure Ocarina source directory
 -u | --update      : update Ocarina source directory
 -b | --build       : configure, build and install Ocarina
 -t | --run-test    : run Ocarina testsuite, plus runtimes and AADLib
 -p | --package     : package ocarina distribution as tarball
 --upload           : upload archives, see source code for details
 --distclean        : distclean Ocarina build directory
 --remove-prefix    : remove prefix prior to installation
 --release          : release Ocarina on GitHub
 --force            : force build

Update-time options, options to be passed along with -u
 -s | --reset       : reset source directory prior to update
 --remote=<URL>     : Set URL of the Ocarina git repository

Build-time options, options to be passed along with -b
 --prefix=<dir>     : install ocarina in <dir>
 --enable-doc       : enable building the documentation
 --enable-gcov      : enable coverage during ocarina build
 --enable-debug     : enable debug during ocarina build
 --enable-python    : enable Python bindings
 --build-info       : display information on build environment

Scenarios, specific combination of parameters
 --scenario=<name>  : run a specific scenario

 Valid names are coverage fresh-install nightly-build taste github
 See source code for details.

 Note: a default scenario can be passed using the OCARINA_SCENARIO
 environment variable

```

## Authors

* Jerome Hugues, maintainer
* Bechir Zalila, original version
",layered architecture
https://github.com/aadl/locum,,
https://github.com/aadl/insurge,,
https://github.com/ObeoNetwork/AADL-Designer,,
https://github.com/saeaadl/aadlv3,"# AADLV3
Experimental AADL V3 Grammar
",
https://github.com/mzmaili/Get-AADLockedoutEvents,"# Get-AADLockedOutEvents
Get-AADLockedoutEvents.ps1 is a PowerShell script retrieves and checks Locked users events, checks locked users, since  how long, and when they will be unlocked.
",N/A
https://github.com/timsaucer/NYTimes_AADL_Redirect,,
https://github.com/juli1/aadl-sysml,"# aadl-sysml
AADL/SysML translator with EA
",
https://github.com/bisc/collision_detection_aadl,"collision_detection_aadl
========================

A AADL model of a collision prevention system for use in a telematics architecture",software architecture
https://github.com/aadl/iii-connectors,,
https://github.com/osate/aadl2altarica,"# AADL to AltaRica Translator

This experimental OSATE feature takes an AADL instance model with EMV2 annex
subclauses and creates an AltaRica (version 3) model from it.

The AltaRica model can be imported into OpenAltaRica for further analysis.

This is an experimental feature which may or may not be supported in the future.

For license information, see file LICENSE.
",layered architecture
https://github.com/OpenAADL/aadlsheet,"# AADL Cheat sheet

This repository provides a ""cheat sheet"" for AADLv2, built for AADL classes.

The provided PDF along with the LaTeX files are provided under a CC-BY licence

## Authors

Jérôme Hugues
",none
https://github.com/ORNL/DD-AADL,# DataDrivenAcceleration,
https://github.com/Oqarina/oqarina,"# Oqarina -- Coq mechanization of AADL ![GitHub Action](https://github.com/Oqarina/Oqarina/actions/workflows/main.yml/badge.svg)

Oqarina is a mechanization of AADL in Coq. It provides a collection of libraries to manipulate AADL models as Coq types, and a formalization of the behavioral semantics of AADL faithful to the AADL standard v2.3.

## Directory structure

* `examples`: tutorial and examples to illustrate Oqarina
* `extraction` : wrapper to extract code and compile a binary
* `src`: Coq sources for AADL mechanization
* `testsuite`: some tests for the extracted code
* `tools`: misc. helper scripts for maintenance

## Required software

Oqarina has been tested using Coq version 8.16 and either VSCoq extension for Visual Code or Proof General.

### Additional packages

The following packages should be installed separately using opam:

* https://github.com/liyishuai/coq-json: JSON manipulation
* https://github.com/Lysxia/coq-simple-io: IO monad with user-definable primitive operations
* https://github.com/coq-community/coq-ext-lib: Additional theories for Coq
* https://github.com/DmxLarchey/Kruskal-Trees: rose tree library with proper (nested) induction principles
* https://gitlab.mpi-sws.org/RT-PROOFS/rt-proofs: PROSA scheduling library

Use `make install_deps` to install them.

## Usage

You may either
- just run from a makefile, type `make` for available targets

- play with the Coq files from VSCode. In this case, make sure the Coq directory is the only one in your workspace. Then from the terminal, run

  ```make build```

- compile extracted code, e.g.

  ```make build build_bin```

  then, run

  ```./_build/default/extraction/extraction.native  --parse testsuite/car.impl.json```

- build using provided docker container

  ```make test_build_docker```

## Suggested reading

Many (free) books exist for Coq, the following one is a good introduction for the style of modeling we are using:

- Chlipala, Adam. Certified Programming with Dependent Types - A Pragmatic Introduction to the Coq Proof Assistant. MIT Press, 2013. http://mitpress.mit.edu/books/certified-programming-dependent-types.

  This book is available from the author website: http://adam.chlipala.net/cpdt/

- An additional reference is the collection of books from https://softwarefoundations.cis.upenn.edu/

- This list gathers many other relevant projects and links: https://project-awesome.org/coq-community/awesome-coq
","layered architecture, command-query responsibility segregation (CQRS)"
https://github.com/kframework/aadl-semantics,"aadl-semantics
==============

Formal executable semantics of AADL in K.
",
https://github.com/software123456789/AADL-Self-driving-car,"# AADL-Self-driving-car
Temat projektu: Opracowanie modelu (AADL) samochodu autonomicznego z uwzględnieniem dynamiki (Simulink) oraz analizą czasową i bezpieczeństwa (Ocarina). Generacja kodu.
# Case-study - model 1
![image](https://user-images.githubusercontent.com/39568472/140623968-ba095f80-ad25-4a69-8630-03f9e7f3678f.png)
# Case-study - model 2 - po dodaniu wątków
![self-driving-car-3](https://user-images.githubusercontent.com/39568472/141683373-995259ac-7fd2-4934-a513-1143e28c966f.PNG)
# Modele danych
![image](https://user-images.githubusercontent.com/39568472/140623961-119d2f25-8f6c-4767-889e-40a1bcd7f846.png)
# Perspektywa wdrożenia 
![self-driving-car-4](https://user-images.githubusercontent.com/39568472/141689099-a89d641d-298c-4756-bdd9-d6175a400923.PNG)
# Propagacja błędów - ocena zagrożenia funkcjonalnego
![image](https://user-images.githubusercontent.com/39568472/143691188-60892d55-9655-4bac-9fb3-5cf3461bc3e0.png)
# Integracja z simulink - model prędkości
![image](https://user-images.githubusercontent.com/39568472/145717307-ae52f018-fc3f-4cc2-8bf7-7977f0b3a686.png)
![image](https://user-images.githubusercontent.com/39568472/145717583-591bcbd6-1e92-4e34-b852-2198250feac3.png)
",software architecture
https://github.com/sireum/air,"# AIR: AADL IR in Slang, JSON, and MessagePack

[![Build Status](https://travis-ci.org/sireum/air.svg?branch=master)](https://travis-ci.org/sireum/air)

AIR provides an IR in [Slang](https://github.com/sireum/slang) for AADL instance models.
It was inspired by [Ocarina's AADL to XML translator](https://github.com/OpenAADL/ocarina/tree/master/resources/runtime/aadl_xml).

## AIR Development

1. Clone both the [Sireum v3 repository](https://github.com/sireum/v3) and this repository:
    ```bash
    git clone --recursive -b master git@github.com:sireum/v3.git sireum-v3
    git clone git@github.com:sireum/air.git sireum-v3/aadl/ir

2. Follow the instructions for installing the [Sireum IVE Development](http://logika.sireum.org/doc/01-getting-started/index.html#bd)

3. Follow the instructions for [setting up Sireum IVE for Sireum v3 Development](https://github.com/sireum/v3#setting-up-sireum-ive-for-sireum-v3-development)
","layered architecture, monolithic architecture"
https://github.com/OpenAADL/AADL-pygments-lexer,"## AADL-pygments-lexer

Pygments lexer for the AADL language, See http://www.aadl.info

### Installation

From a checkout of this repository, simply run

`python ./setup.py build install`

*Note: This implementation is derived from AADLLexer.py written by Sam
Procter for the MDCF project*
",Layered architecture
https://github.com/OpenAADL/fmu2aadl,"FMU2AADL  |license|
========

About
-----

The ``fmu2aadl`` script maps FMU to AADL package that can be later
integrated into larger AADL models, to simulate larger systems, and
additional makefiles and C compilation units for integration with
Ocarina.

This package embeds a copy of the FMUSDK2.0.3 ported to Linux by
Christopher Brooks from https://github.com/cxbrooks/fmusdk2

Installation
------------

The script is provided as a standard Python module.

The script can be installed, as user, using default Python install
procedure. From the repository root directory, simply run::

  python setup.py install --user

Do not forget to add ``$HOME/.local/bin`` to your PATH.

Note
....

The script assumes ``libxml2`` is installed, along with a fully 
operational ``Ocarina``, Python and a gcc + binutils compilation chain.
See provided Dockerfile for the full list of dependencies.

Testing
-------

Examples are provided in the ``examples`` directory.

A ``Dockerfile`` is provided for quick tests using the docker container engine.
See contents for more details.

Authors
-------

* Jean-Marie Gauthier, Samares Engineering
* Jerome Hugues, ISAE Supaero

.. |license| image:: https://img.shields.io/badge/License-EPL%201.0-red.svg
    :target: https://github.com/OpenAADL/fmu2aadl/
    :alt: License
",layered architecture
https://github.com/mikekab/collision_detection_aadl,"collision_detection_aadl
========================

A AADL model of a collision prevention system for use in a telematics architecture",software architecture
https://github.com/AADL21/AADL21,"- 👋 Hi, I’m @AADL21
- 👀 This is your AADL project submission GitHub account. 
- 🌱 Create one of your own GitHub repository for your project group with name as batch_groupno_projecttitle.
- 💞️ Add @AADL21 as a collaborator
- 📫 Your repository should contain the following
1. Complete project code directory structure
2. Project report
3. Apk file of your app
4. Recorded video of project demo
5. Read me file of your project showing the usage of external libraries if you have used for project development. 
<!---
AADL21/AADL21 is a ✨ special ✨ repository because its `README.md` (this file) appears on your GitHub profile.
You can click the Preview link to take a look at your changes.
--->
",Layered architecture
https://github.com/saeaadl/aadlv2.2,"# AADLv2.2

This repository tracks  issues related to the AADL V2.2 Standard published in Sept 2016.

Please examine the [AADL V2.2 Issues](https://github.com/saeaadl/aadlv2.2/issues) area for currently open and resolved issues.

## Content

* `property_set`: AADLv2 property sets
",N/A
https://github.com/Annette0090/AADLeaderBoardApplication,"#AADLeaderBoardApplication
#GoogleAfrica
#GoogleDeveloperGroup
Google Africa Scholarship Practice Project - Android Developer
Learning Phase 2 Practice project.
",MVC
https://github.com/saeaadl/AadlV3Prototype,"# AadlV3Prototype
Instructions for setting up the prototype:
* Download Eclipse
  * Go to https://www.eclipse.org/downloads/packages/ and download **Eclipse IDE for Java and DSL Developers**
  * Install and launch Eclipse
* Download additional dependencies
  * Within Eclipse, select **Help** -> **Install New Software...**
  * In the **Work with:** dropdown, select the update site for your version of Eclipse. For example, `2019-09 - http://download.eclipse.org/releases/2019-09`
    * Under **Modeling**, select **Sirius Integration with Xtext** and **Sirius Specifier Environment**
  * In **Work with:**, enter the URL `https://dl.bintray.com/itemis/generic/xtext-testing/updates/`
    * Select **Xtext Testing Framework**
  * Click **Next >** to install **Sirius Integration with Xtext**, **Sirius Specifier Environment**, and **Xtext Testing Framework**
* Check out the AadlV3Prototype sources
  * Switch to the **Git** perspective by selecting **Window** -> **Perspective** -> **Open Perspective** -> **Other...** -> **Git**
  * Select **Clone a Git repository** and use the URI `https://github.com/saeaadl/AadlV3Prototype.git`
  * Right click on the **AadlV3Prototype** repository and select **Import Projects...**
    * Import all projects except for `AadlV3Prototype` and `AadlV3Prototype/org.osate.xtext.aadlv3.tests/models/AV3Examples`
  * Switch back to the **Java** perspective
* Execute the prototype by launching a new Eclipse application
  * Create a run configuration by selecting **Run** -> **Run Configurations...**
  * Right click on **Eclipse Application** and select **New Configuration**
    * Give the run configuration a name such as **V3Prototype**
    * Switch to the **Plug-ins** tab and deselect **Validate Plug-ins automatically prior to launching**
    * Click **Run**
* Import the example project into your runtime workspace
  * In the Eclipse window that was launched used the run configuration, switch to the **Git** perspective
  * Select **Add an existing local Git repository** and select the **AadlV3Prototype** repository
  * Right click on the **AadlV3Prototype** repository and select **Import Projects...**
    * Import only the project `AadlV3Prototype/org.osate.xtext.aadlv3.tests/models/AV3Examples`
  * Switch back to the **Resource** perspective",layered architecture
https://github.com/xinglinquan/AADL2OCRA,"# AADL2OCRA
AADL转换为OCRA输入语言的工具，基于OSATE平台的插件开发
",
https://github.com/fletchwsf/Aircraft,,
https://github.com/jacquelyn-rapose/AADL-SmartParkingApplication,"# AADL-SmartParkingApplication
AADL code for OSATE 
",
https://github.com/josealejandro2928/arch-models-example-2,"# arch-models-example-2
Container or aadl models
",
https://github.com/saeaadl/faceaadl,"# faceaadl
FACE AADL Annex
",
https://github.com/thomasabraham/AADLAB,# AADLab,
https://github.com/scseely/AADLab,# AADLab,
https://github.com/trek/aadl-api,,
https://github.com/ntumkur/ElectronicTollCollection,"# ElectronicTollCollection
An AADL model for ElectronicTollCollection
",
https://github.com/ndsagaga/AADL-Statistics,,
https://github.com/FormalADL/kAADL,"kAADL
==========================================================================

Overview
--------------------------------------------------------------------------
 kAADL aims to provide a k based AADL(Architecture Analysis and Design Language) 
 parser and relative semantics relative toolset.

AADL
--------------------------------------------------------------------------


K
--------------------------------------------------------------------------

AADL Parser
--------------------------------------------------------------------------

AADL semantics rules
--------------------------------------------------------------------------","Layered architecture, SOA"
https://github.com/juli1/aadl-models,"aadl-models
===========
For any question/contact, please send an e-mail to
julien@gunnm.org.

",
https://github.com/khoroshilov/aadl-qa,,
https://github.com/sireum/aadl-security,"# aadl-security
",
https://github.com/esorton/vim-aadl,"vim-aadl
========

aadl syntax highlighting and indention plugin for VIM.

Copied from [AADLib]; repackaged as a plugin.  Install with [pathogen],
[vundle], or other plugin manager.

[AADLib]: https://github.com/yoogx/AADLib
[pathogen]: https://github.com/tpope/vim-pathogen
[vundle]: https://github.com/gmarik/vundle
",n/a
https://github.com/henrymai/aadl_testing,"Minimal example

The model being used is not optimal for mnist, but was chosen because it shows a difference between AADL_gpu and AADL_cpu and also trains fast.

Environment:
  - Container image: nvcr.io/nvidia/pytorch:21.09-py3
  - CPU: AMD Threadripper 1900x
  - GPU: Nvidia Titan RTX

Results:
```
python3 main.py --AADL_gpu

[...]

Test set: Average loss: 0.4970, Accuracy: 8135/10000 (81%)
```
```
python3 main.py --AADL_cpu

[...]

Test set: Average loss: 0.3923, Accuracy: 8682/10000 (87%)
```

```
python3 main.py

[...]

Test set: Average loss: 0.3573, Accuracy: 8807/10000 (88%)
```

![Tensorboard graphs](tensorboard_graphs.png)
",layered architecture
https://github.com/sleepynate/aadl-programming,"# AADL Programming class

These are some python scripts I wrote demonstrating the turtle module to teach
youngsters how to learn about the spatial awareness necessary to develop
video games.

## Neat, where?!

The class will be held July 14th, 2012 at the Ann Arbor District
Library's Downtown Branch.

### Legal Stuff

Copyright (C) 2012 Nathan Dotz <nathan(dot)dotz(at-sign)gmail(dot)com>

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
""Software""), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
",No specific software architecture mentioned
https://github.com/AADL4ROS/aadl-ros-templates,,
https://github.com/aadlani/aadlani.github.io,,
https://github.com/bulletshot60/cruise-control-example,,
https://github.com/bbdev442/AADL-Instance-Model-Viewer,,
https://github.com/santoslab/aadl-map-apps,"AADL Map Apps
=============

A collection of apps designed to be used with the [MDCF Architect](http://santoslab.org/pub/mdcf-architect/).
",- Model-view-controller (MVC) architecture
https://github.com/fernandosgoncalves/UAV_AADL_Project,"# UAV_AADL_Project
",
https://github.com/Anshumaan-Chauhan02/NaturalLanguage-To-AADL,"<h2 align='center'><b> Toward Generating System Architecture and Formal Functional Description in the Architecture Analysis & Design Language (AADL) With Structured Natural Language </b></h2>

<h4 align='center'> Project Description </h4> 
Model based engineering has enabled automated analytical reasoning early in the design phase. As a result, inconsistencies and design errors can be captured early in the development lifecycle. But there is still a gap in the natural language-based specifications and its actual implementation. This is because the formal method-based tools utilize mathematical principles and theories of computation that require specific skills, thus reducing the usability of model-based engineering. Natural language is the most widely used method to represent specifications. So, it is intuitive to utilize natural language-based representation to generate system and formal annotations such that it will enable automated architectural analysis with much wider acceptance leading to a much broader impact. In our paper we focus on designing the above-mentioned approach that integrates representation of the specifications in a subset of English language which can then be used to generate system architecture in Architecture Analysis and Design Language along with the generation of functional specifications. We illustrate our approach by validating it with use cases from the aerospace and electromechanical domains. <br><br>
Paper link : https://asmedigitalcollection.asme.org/IDETC-CIE/proceedings-abstract/IDETC-CIE2022/86212/V002T02A077/1150294
<br>

### Technical Skills 
![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)
![Java](https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&logo=java&logoColor=white)
![ANTLR4](https://img.shields.io/badge/ANTLR4-red?style=for-the-badge)
![Visual Studio Code](https://img.shields.io/badge/Visual%20Studio%20Code-0078d7.svg?style=for-the-badge&logo=visual-studio-code&logoColor=white)
![Jupyter Notebook](https://img.shields.io/badge/jupyter-%23FA0F00.svg?style=for-the-badge&logo=jupyter&logoColor=white)

### File Description and Content 
* nlptoarchfinal.py : Natural Language Processing done on the text to get it into proper compiler accepted format
* src/data/ : This folder contains all the English language inputs used for the testing of the system
* src/lib/ : Contains all the jar files and the compiler files (Lexer, Parser and Visitor)
* src/main/GrammarVerifier.java : Verifies whether the input text is according to the syntax
* src/main/Main.java : Execution file that takes the input file and generates the AADL code as an output
* src/main/Visitor.java : Compiler that does the conversion of parsed text input to corresponding AADL code 
",layered architecture
https://github.com/Sortinn/aadl-transfer-c,"# aadl-transfer-c

本工具可以解析AADL模型，生成相应的C语言代码框架。",
https://github.com/OpenAADL/ocarina-docker,"# ocarina-docker

## About

Ocarina docker images, based on various Linux images: CentOS, debian,
Fedora and Ubuntu.

These docker files fetch all dependencies to compile Ocarina, along
with the `build_ocarina.sh` build script.

The following images are provided, with the following variant

| Name                           | Distribution     | GNAT                |
| ------------------------------ |:----------------:| -------------------:|
| alpine                         | Alpine           | default GCC         |
| centos-7.x-gnat-gpl-2016       | CentOS 7         | GNAT GPL 2016       |
| centos-7.x-gnat-gpl-2017       | CentOS 7         | GNAT GPL 2017       |
| centos-7.x-gnat-community-2018 | CentOS 7         | GNAT Community 2018 |
| debian-9.0                     | Debian 9 stable  | default GCC         |
| debian-10.0                    | Debian 10 stable | default GCC         |
| debian-testing                 | Debian teting    | default GCC         |
| fedora-32                      | Fedora 32        | default GCC         |
| fedora-Rawhide                 | Fedora Rawhide   | default GCC         |
| Ubuntu-Xenial                  | Ubuntu Xenial    | PPA/GCC6            |
| Ubuntu-Artful                  | Ubuntu Artful    | default GCC         |
| ubuntu-20.04                   | Ubuntu 20.04 LTS | default GCC         |

Note: CentOS builds rely on GNAT GPL or Community releases,
Ubuntu-Xenial uses PPA/GCC to use a more recent GCC version. All other
builds rely on the default GCC provided by the Linux distribution.

## Usage

* To build the image, from one of the directory:
```
    docker build -t ocarina/build .
```

* To run the image:
```
   docker run -t -i ocarina/build bash
```

or

```
   docker run -t ocarina/build
```

to run the default scenario: perform a fresh install of Ocarina

## Running Ocarina from a docker container

The `debian-10.0` dockerfile has been adapted so that you can run
ocarina from the docker container.

Let us suppose you have some AADL files in the common directory, you
can then run

```
docker run -ti  -v `pwd`:/work  ocarina/ocarina ocarina [ocarina arguments]
```
",microservices architecture
https://github.com/yaoJi123/fitlife,,
https://github.com/hzengindev/AspNetCoreAADLoginWithFormsAuth,"# AspNetCoreAADLoginWithFormsAuth
Forms Authentication içeren bir Asp.net Core uygulamasında, Azure Active Directory üzerindeki bilgileri kullanarak, authentication sürecini özelleştirmeye yönelik örnek bir proje.
","MVC architecture, layered architecture"
https://github.com/josealejandro2928/arch-models-example,"# arch-models-example
En example repository that holds a bunch of aadl models
",
https://github.com/brlarson/BLESS-models,"# BLESS-models
AADL models having BLESS behaviors, proof scripts, and correctness proofs
",
https://github.com/AADL4ROS/ros-code-generator,,
https://github.com/UndifinedMan/ESysml,"# ESysml
 A SysML profile for AADL core, behavior annex and error model annex v2
",
https://github.com/senaunalmis/CMPare,"# CMPare-SE322
SE322 Software Architecture 
The purpose of this project is to obtain hands-on experience with architecture modeling. 
We using an architectural description language (AADL). 
In this repo, Sevim and I will work on the AADL project.  
",software architecture
https://github.com/bisc/IPL,"# IPL: an Integration Property Language for Multiple Models

## Development build setup 

Prerequisites to have before installing IPL: Java 1.8.

Prerequisites to be installed below: Eclipse Oxygen 4.7.1a, EMF 2.13.0, Xtext SDK 2.12.0, OSATE 2.3.0.

1) Download an appropriate [Eclipse Installer](https://wiki.eclipse.org/Eclipse_Installer) for your system. 

2) Choose advanced setup and Eclipse Modeling Tools - Oxygen 1a (4.7.1a). It is likely that IPL would work with later releases of Oxygen too. 

3) On the Projects page, add the [setup URL for OSATE 2.3.0](https://raw.githubusercontent.com/osate/osate2-core/2.3.0-RELEASE/osate.releng/osate2.setup) and click through the rest of the dialog. It will install Xtext, OSATE, and many relevant dependencies. You can also use the latest [OSATE setup URL](https://raw.githubusercontent.com/osate/osate2-core/develop/osate.releng/osate2.setup) at your own risk.

Steps 1-3 are also described in more detail with minor deviations (a different install URL) on the [OSATE2 setup page](http://osate.org/setup-development.html).

4) Import this project into Eclipse: File → Import → Git → Projects from Git. 
    * It along comes with its major dependencies: z3 SMT solver and Prism model checker. 
    * z3 comes with a binary in org.xtext.example.ipl.z3, which is directly called by IPL. You can replace this binary with a different verion. 
    * All the Prism model checker dependencies (including static and shared libraries) are provided in the ipl.prism.lib project. IPL is known to work with the version 4.4.beta of Prism. If you wish to adjust them, change variables LD_LIBRARY_PATH (should point to share library \*.so files) and PRISM_LIB_PATH (should point to the HOA script and a jar of the Rabinizer tool). 

5) Build the IPL language infrastructure by running the GenerateIPL run configuration. Alternatively, you can directly run the  org.xtext.example.ipl/src/org/xtext/example/ipl/GenerateIPL.mwe2 script (Right-Click on the file -> Run as -> MWE2 Workflow). Refresh and clean all the projects. It should build automatically. 

6) Use the provided launch file ""IPL Eclipse Application"" run configuration to start an Eclipse version with IPL support.

7) Download [IPL projects](https://github.com/bisc/IPLProjects) and import them in the launched verion of the Eclipse.

8) To run IPL verification, you can click the IPL verification button while a .ipl file is open or selected. Alternatively, you can use the native Eclipse build. It is recommended that you turn off automatic building and target specific files since verification can take some time. 

9) If you want to generate AADL views or Prism models from json maps, run the main methods in org.xtext.example.ipl.viewgen/src/org/xtext/example/ipl/viewgen/map/MapTranslatorAadl.java and /org.xtext.example.ipl.viewgen/src/org/xtext/example/ipl/viewgen/map/MapTranslatorPrism.java, respectively. 
	* Their launch files are also provided with in the repository. 
	* You will need to adjust paths in the environment variables for these generators. MAP_DIR should point to the directory with input maps. PRISM_OUT_DIR and AADL_OUT_DIR should point to the directories where generated Prism and AADL models are put, respectively. None of these paths should end with a '/'. 

## User build setup

TBA.

## Troubleshooting

Q: Which OSATE projects are necesary to run IPL?  
A: All of the projects in the osate2-core working set and all in the osate-ge set _except_ org.osate.ge.ba and org.osate.ge.errormodel. All the other working sets/repos from the Oomph setup are optional.


Q: I am getting bundle and compiler errors in OSATE2 code, including being unable to resolve eclipse.jdt.core.  
A: Try switching the target platform in Preferences -> Plug-in Development -> Target Platform from ""Modular Target"" to ""Running Platform."" If this fixes the errors, you will want to make this change permanent by preventing Oomph from running the startup task that sets the target platform back to ""Modular Target."" Although that can be done in various ways, the easiest one is to delete two Eclipse plugins: Oomph Targlets and Oomph Setup Targlets. 

Q: I am getting parameter value and artifact transfer errors related to Maven and/or Tycho.  
A: Delete the failed artifacts and update IPL main project's Maven as described in [this post](https://stackoverflow.com/questions/5074063/maven-error-failure-to-transfer).
      

## Contacts
 * Ivan Ruchkin iruchkin@cs.cmu.edu
 * Grant Iraci grantira@buffalo.edu
 * Josh Sunshine sunshine@cs.cmu.edu
 * Bradley Schmerl schmerl@cs.cmu.edu
 * David Garlan garlan@cs.cmu.edu
","layered architecture, microservices architecture"
https://github.com/bisc/IPLProjects,"# IPL Projects
Illustrations, case studies, and tests for the Integration Property Language (https://github.com/bisc/IPL). 

Directories: 
* IPLRobotProp a collection of properties for the mobile robot case study
  - aadl/ views
  - ipl/ properties
  - model/ MDPs and map model
  - performance-analysis/ performance data and logs
* IPLTest/ a collection of tests for an IPL implementation
  - model/ prism models
  - src/aadl tests with views 
  - standalone/ tests without views

## Usage 
Import into an IPL-supporting Eclipse application. Build *.ipl files to verify integration properties. 

## Contacts
* Ivan Ruchkin iruchkin@cs.cmu.edu
* Grant Iraci grantira@buffalo.edu
* Josh Sunshine sunshine@cs.cmu.edu
* Bradley Schmerl schmerl@cs.cmu.edu
* David Garlan garlan@cs.cmu.edu
","layered architecture, monolithic architecture"
https://github.com/ahmed-amro/APS-Communication_Architecture,"# APS Communication Architecture
A model for a communication architecture of an Autonomous Passenger Ship (APS). The architecture model is designed using the Architecture Analysis and Design Language (AADL) and includes the different architectural components with varying degrees of abstractions to provide flexibility in implementation options and to support various use cases of this technology. 

```diff
- Note: The latest architecture model migh not be reflected by the model shared in this repository. We will do our best to update the model here with the latest desing improvmnets. Contact us if you are interested in unpublished updates. 
```

## Usage
Download project and import to OSATE2 software (https://osate.org/).

## Brief Description
The model is represented in a Top-down Component-based manner. Each high level component in the ecosystem is described in a separate AADL package (.aadl). 

### Ecosystem (Operational Context)
A package containing a wide view of all the high-level components called (Overall.aadl) can be a good place to start. In (Overall.aadl) all high-level components and their connections can be observed and can be accessed further from there. 

A list of all high-level components and their associated aadl package is shown below:

- Auto Passenger Ship (APS)    : APS.aadl
- Remote Control Center (RCC)  : RCC.aadl
- Cloud Component              : CloudComponent.aadl
- Emergency Control team       : ECT.aadl
- Mobile Communicaiton Network : Mobile5GNetwork.aadl
- Shore Sensor System          : SSS.aadl
- Other Ships                  : Ship.aadl
- Traffic Information Services : TIS.aadl
- Related Stakeholders         : Stakeholder.aadl
- Aids to Navigation Services  : AidsToNavigation.aadl

 ### Properties
Specific system-level and connection-level properties have been created to better descripe the model. Additional requirements have been described as properties to aid in the implementation phase. 

- AddedCommunicationProperties.aadl
- Requirements.aadl

## Acknowledgment 
The work that generated this architecture is a part of an ongoing project at the Norwegian University of Science and Technology (NTNU) called the Autoferry (https://www.ntnu.edu/autoferry). We here acknowledge all the support provided by the university and the help received from project members to create this architecture.  

## Contact us
Architect: Ahmed Amro, PhD in Cybersecurity (candidate)
Email: ahmed.amro@ntnu.no
",layered architecture
https://github.com/Sneha-Perugupalli/Using-a-Network-of-Drones-to-Inspect-Structural-Deformations,,
https://github.com/jsa2/AADLegacyFork,"## Azure AD Workbook fork for combining interactive and non-interactive logs 
This is fork of the existing Azure AD workbook for Legacy Auth Sign-ins. This fork combines  non-interactive and sign-in logs for legacy authentication

```json
""fromTemplateId"": ""community-Workbooks/Azure Active Directory/SignInsUsingLegacyAuth"",
    ""$schema"": ""https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json""
```
- Compared to the original book, the 'Interuptions count'  metric is removed, if needed this metric can be added to the workbook with very little work 
- If you are interested about the combination of two log types, I wrote about that [here](https://securecloud.blog/2021/01/11/log-analytics-normalizing-different-data-types-for-analytics/)


- [Azure AD Workbook fork for combining interactive and non-interactive logs](#azure-ad-workbook-fork-for-combining-interactive-and-non-interactive-logs)
- [Preview](#preview)
- [Warning](#warning)
- [Pre-requisites](#pre-requisites)
- [Deployment](#deployment)
  - [Edit the included workbook.json](#edit-the-included-workbookjson)
  - [Azure Monitor Workbooks -  create new workbook](#azure-monitor-workbooks----create-new-workbook)
  - [Azure Monitor Workbooks - select the </> code editor](#azure-monitor-workbooks---select-the--code-editor)
  - [Azure Monitor Workbooks - View the template](#azure-monitor-workbooks---view-the-template)
## Preview
Updated workbook includes new sign-in types, and displays source in ""Sign in details""
![img](img/top.png)

## Warning
Minimal description and context provided.

Recommended reading:
https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/log-query-overview
https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/concept-all-sign-ins


## Pre-requisites
- Azure AD and Azure Subscription
- Export AADNonInteractiveUserSignInLogs & SigninLogs are exported to existing Log Analytics Workspace
  
## Deployment

### Edit the included workbook.json
- in workbook.json replace the following values with the log analytics workspaces you have exported the logs to (Starting from line 485)
```json
 ""defaultResourceIds"": [
      ""/subscriptions/3539c2a2-cd25-48c6-b295-14e59334ef1c/resourceGroups/rg-m365758644/providers/Microsoft.OperationalInsights/workspaces/m365x758644"",
    ],
    ""fallbackResourceIds"": [
      ""/subscriptions/3539c2a2-cd25-48c6-b295-14e59334ef1c/resourceGroups/rg-m365758644/providers/Microsoft.OperationalInsights/workspaces/m365x758644"",
    ],
``` 
### Azure Monitor Workbooks -  create new workbook
![img](img/monitor-new.png)
### Azure Monitor Workbooks - select the </> code editor
![img](img/monitor-new-2.png)
- paste contents of workbook.json to code editor, and click apply
  - ""Ensure 'Gallery Template' is selected (should be default)
  
![img](img/monitor-new-3.png)
### Azure Monitor Workbooks - View the template
![img](img/monitor-new-4.png)
","layered architecture, event-driven architecture"
https://github.com/wangxiaopeng/AADLSpoofaxLang,,
https://github.com/Baga942/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/yuyimenglong/mystore,"mystore
=======

AADL
",
https://github.com/AadlanME/AadlanME,,
https://github.com/rose2s/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/AliShirazi/AADLLayoutJava,"AADLLayoutJava
==================
AADL Graphical editor is built on the AADL (Architecture Analysis & Design Language). Currently, the project is looking to optimize the generated
layouts from its AADL model files. This is currently being tested in Java before it is being transferred over. My task
with the testing is designing and implementing the algorithms for determining the optimizations. This includes
shape intersections, line intersections, shape padding, and diagram area. All of these algorithms can be
seen in the MonteCarloLayout.java
","layered architecture, MVC architecture"
https://github.com/muktotla/aadlab3,,
https://github.com/Bhavya-02022000/AADL2,"# aadl2

A new Flutter project.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)

For help getting started with Flutter, view our
[online documentation](https://flutter.dev/docs), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
",layered architecture
https://github.com/AAdler2500/AAdler2500,,
https://github.com/wangxiaopeng/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/chaima96-DS/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/oulman/AADLicensingHelper,"
# What is AADLicensingHelper

The AADLicensingHelper is a collection of functions I find useful for working with the AzureAD Powershell Module 2.0. 

# Prerequisites 

* AzureAD Powershell v2
```
Install-Module AzureAD
```

# Howto

Setting up.

```
PS C:\git\AADLicensingHelper> Import-Module .\AADLicensingHelper.psm1
PS C:\git\AADLicensingHelper> Connect-AzureAD

Account                               Environment Tenant
-------                               ----------- ------
admin@tenant.onmicrosoft.com          AzureCloud  b4a4aff4-f975-47cd-a243-c786822e7645
```

Querying an AAD users Service Plans and assigned from Skus.

```
PS C:\git\AADLicensingHelper> $AADUser = Get-AzureADUser -ObjectId user@tenant.onmicrosoft.com
PS C:\git\AADLicensingHelper> Get-AADUserAssignedPlans -AADUser $AADUser | ft

UserPrincipalName              ServicePlanName          SkuPartNumber                SkuId                                ServicePlanId
-----------------              ---------------          -------------                -----                                -------------
user@tenant.onmicrosoft.com OFFICE_FORMS_PLAN_2      STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 9b5de886-f035-4ff2-b3d8-c9127bea3620
user@tenant.onmicrosoft.com SHAREPOINTWAC_EDU        STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 e03c7e47-402c-463c-ab25-949079bedb21
user@tenant.onmicrosoft.com SHAREPOINTWAC_EDU        PROJECTONLINE_PLAN_1_FACULTY b732e2a7-5694-4dff-a0f2-9d9204c794ac e03c7e47-402c-463c-ab25-949079bedb21
user@tenant.onmicrosoft.com SHAREPOINTENTERPRISE_EDU PROJECTONLINE_PLAN_1_FACULTY b732e2a7-5694-4dff-a0f2-9d9204c794ac 63038b2c-28d0-45f6-bc36-33062963b498
user@tenant.onmicrosoft.com PROJECTWORKMANAGEMENT    STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 b737dad2-2f6c-4c65-90e3-ca563267e8b9
user@tenant.onmicrosoft.com SHAREPOINTSTANDARD_EDU   STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 0a4983bb-d3e5-4a09-95d8-b2d0127b3df5
user@tenant.onmicrosoft.com SWAY                     STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 a23b959c-7ce8-4e57-9140-b90eb88a9e97
user@tenant.onmicrosoft.com SWAY                     PROJECTONLINE_PLAN_1_FACULTY b732e2a7-5694-4dff-a0f2-9d9204c794ac a23b959c-7ce8-4e57-9140-b90eb88a9e97
user@tenant.onmicrosoft.com EXCHANGE_S_STANDARD      STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 9aaf7827-d63c-4b61-89c3-182f06f82e5c
user@tenant.onmicrosoft.com MCOSTANDARD              STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 0feaeb32-d00e-4d66-bd5a-43b5b83db82c
user@tenant.onmicrosoft.com OFFICESUBSCRIPTION       STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 43de0ff5-c92c-492b-9116-175376d08c38
user@tenant.onmicrosoft.com RMS_S_ENTERPRISE         STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 bea4c11e-220a-4e6d-8eb8-8ea15d019f90
user@tenant.onmicrosoft.com YAMMER_EDU               STANDARDWOFFPACK_IW_FACULTY  78e66a63-337a-4a9a-8959-41c6654dfb56 2078e8df-cff6-4290-98cb-5408261a760a
```

# Issues

Please use the Github issue tracker to report problems

# Contact

* Email: oulman@outlook.com
* Twitter: @oulman



",Another architecture
https://github.com/PickleRick68/AadlProject,,
https://github.com/llukowicz8/AadlTranslator,,
https://github.com/sujaykadam/aadl2,"# aadl2

A new Flutter project.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)

For help getting started with Flutter, view our
[online documentation](https://flutter.dev/docs), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
",layered architecture
https://github.com/fletchwsf/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/abhisekkumar/AadlProjects,# AadlProjects,
https://github.com/sabudilovskiy/AADL1,"# adminApp

A new Flutter project.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)

For help getting started with Flutter, view our
[online documentation](https://flutter.dev/docs), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
","MVC, layered architecture"
https://github.com/zfarooq/AADLoadBalancer,,
https://github.com/C4theSlime/AADLvl1,,
https://github.com/Bhavya-02022000/AADL1,"# adminApp

A new Flutter project.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)

For help getting started with Flutter, view our
[online documentation](https://flutter.dev/docs), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
","MVC, layered architecture"
https://github.com/AADL2148/AADL2148,,
https://github.com/DemoUser683/Authenticator,,
https://github.com/DemoUser683/Authenticator-1,,
https://github.com/nimccoll/AADLogicApp,,
https://github.com/H3xFiles/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/janiss151/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/mujahidmohsinCAE/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/dharmesh1463/AadlMiniProject,,
https://github.com/wcarper/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/janiss151/aadl2,"# aadl2

A new Flutter project.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)

For help getting started with Flutter, view our
[online documentation](https://flutter.dev/docs), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
",layered architecture
https://github.com/osate/AADLV3,"# AADLV3
Experimental AADL V3 Grammar
",
https://github.com/olsookie/AADLegacyTLS,"# AADLegacyTLS

This code has been pulled from another person and modified.

Original Code Source:  https://gist.github.com/merill/379c76c3fa4b6c003207ede4f9a5406d#file-get-lowtls-ps1

This PS Script will pull a list of sign-ins that use Legacy versions of TLS, this included 1.0, 1.1, and 3des.

Original code was modified to include Managed Identity's Sign-in Logs and Service Principal Identity Sign-in Logs

Learn more about AAD TLS deprecation today https://docs.microsoft.com/en-us/troubleshoot/azure/active-directory/enable-support-tls-environment?tabs=azure-monitor#overview-of-new-telemetry-in-the-sign-in-logs
",Layered architecture
https://github.com/devinraina1/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/aida566/AADListView,,
https://github.com/SualpDnc/JobFound,,
https://github.com/ameys2907/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/juliethpcastellanos/models,,
https://github.com/osate/aadl.github.io,"# AADL Web Site

**The content of this repository is generated from repository osate/aadl-website**

**Do not push to this repository - all changes will be lost.**
","microservices architecture, service-oriented architecture (SOA)"
https://github.com/rchampag/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/zld3002/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/engahmadamro/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/ansh-2111/AADL-,"# AADL
Game Booking Application called Bookingo
",
https://github.com/szymonSumara/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/saeaadl/aadlv2.3,,
https://github.com/alexnedelcu/aadl2asp,,
https://github.com/HPECLab/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/meeby/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/Shoumik-Gandre/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/Sandared/aadl2rtsj,"# aadl2rtsj
A transformation  of detailed AADL (Architecture Analysis and Design Language) software models to RTSJ (Real-Time Specification for Java) code. 
",Layered architecture
https://github.com/killiing/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/vaibhav-b-gandhi/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/crewjam/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/htw1997/AADL,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/marinnedea/AADLoginExtension-on-Linux-VMs,"# AADLoginExtension-on-Linux-VMs
Script to test AADLoginExtension installation on Linux VMs.
",
https://github.com/alekseyg/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/sahildesai2809/aadl,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
",layered architecture
https://github.com/singajeet/AADLcdGuiLib,,
https://github.com/miltoncs/AadlAgreeGeneration,"# Let's make some AADL/AGREE!

```agree/concurrency/``` - This is where we generate the concurrency check. Given n threads, generate the agree node
function which takes the times of n jobs and determines, from m=0 to n, if m workers can accomplish the tasks in
the given time t.

```agree/linearization/``` - This is where we generate the linearized version of (ideally) any function!
",Layered architecture
https://github.com/C4theSlime/AADLvl2Plus,,
https://github.com/saeaadl/aadlv2.1,"# aadlv2.1
For managing AADL V2.1 errata
",
https://github.com/MariaPatra/AADLeaderBoardProject,,
https://github.com/ChDuhil/AADL_Architecture,,
https://github.com/rimbendhaou/aadl_ils_project,,
https://github.com/AceAltair13/OpenRestaurant,,
https://github.com/nsm18002/DVA488Lab2,,
https://github.com/rimbendhaou/adiru_aadl,,
https://github.com/fletchwsf/S18,,
https://github.com/atm849/AADL-EDS-Model,,
https://github.com/Dylek/AADLVending,,
https://github.com/sahildesai2809/Organised,"# Organised
",
https://github.com/devmohsene/aadl_mainlevee_api,"# aadl_mainlevee_api
aadl Mainlevée api
",
https://github.com/justynastepien/bankomat,"# bankomat
bankomat/wplatomat - projekt aadl
",
https://github.com/saeaadl/saeaadl.github.io,"# AADL.info Website

This is the master repository for the [AADL.info](https://www.aadl.info).

It builds on the Jekyll static website builder
and GitHub pages, see [Github Pages and Jekyll](https://docs.github.com/en/github/working-with-github-pages/setting-up-a-github-pages-site-with-jekyll) for details.
",layered architecture
https://github.com/DivyaKrupaBegari/AADLab,# AADLab,
https://github.com/aadl/printing,"# Public Printing at AADL

This repo contains the code used to setup the public printing at AADL along with some documentation. 

If you have suggestions for services or offerings please feel free to open an issue or give feedback via our [contact us form](http://www.aadl.org/contactus).

## Overview

All of our public facing printers are Lexmark MFP Mono Laser Printers. Prints and copies are paid for at the main public desk at each location. For color or large format printing we suggest a full service copy shop.

All public stations print to a single cups-pdf queue which integrates with our public computer session manager. Staff can then send the generated PDFs to the printer of their choice when patrons are ready.

Airprint and other patron services such as fax are provided as possible.

| Location      | Printer       | IP              | Model     | Airprint | Fax |
| ------------- | ------------- | --------------- | --------- | -------- | --- |
| Downtown      | 1st Youth     | 10.10.0.32      | B2238     | :heavy_check_mark: | :x:  |
| Downtown      | 2nd Lab 1     | 10.10.0.36      | MX511dh   | :heavy_check_mark: | :heavy_check_mark: |
| Downtown      | 2nd Lab 2     | 10.10.0.37      | MX511dh   | :heavy_check_mark: | :heavy_check_mark: |
| Downtown      | 2nd Nonfiction| 10.10.0.34      | MX522adhe | :x: | :x:  |
| Downtown      | 2nd Fiche     | 10.10.0.35      | X463de    | :heavy_check_mark: | :x:  |
| Malletts      | Lab 1         | 10.10.0.24      | MX522adhe | :heavy_check_mark: | :heavy_check_mark: |
| Malletts      | Lab 2         | 10.10.0.25      | MX522adhe | :heavy_check_mark: | :heavy_check_mark: |
| Pittsfield    | Lab 2     | 10.10.0.26      | MX511dhe  | :heavy_check_mark: | :heavy_check_mark: |
| Pittsfield    | Lab 1      | 10.10.0.27      | MX511dhe  | :heavy_check_mark: | :heavy_check_mark:  |
| Traverwood    | Near Lab      | 10.10.0.28      | MX511dhe  | :heavy_check_mark: | :x:  |
| Traverwood    | Near Bathrooms| 10.10.0.29      | MX511dhe  | :heavy_check_mark: | :heavy_check_mark: |
| Westgate      | 1 (by lab)    | 10.10.0.30      | XM1145    | :heavy_check_mark: | :heavy_check_mark: |
| Westgate      | 2 (by lab)    | 10.10.0.31      | XM1145    | :heavy_check_mark: | :heavy_check_mark: |
",layered architecture
https://github.com/qtasali/AuthInAADL,"# AuthInAADL
Modeling authorization in AADL

Please install OSATE and Resolute using the following links:
  1. OSATE: http://osate.org/download-and-install.html#
  2. Resolute: https://github.com/smaccm/smaccm

Next and lastly, use the project set file to clone all the porject. Otherwise, you can individually clone the following projects:
  1. aadl-book
  2. alisa-examples
  3. osate-examples
  4. AuthInAADL

",layered architecture
https://github.com/tomasdfen/AADLIS,"# AADLIS
Analisis y aplicación de Deep Learning a Irradiancia Solar
",
https://github.com/fletchwsf/OSATE-FTA-Tests,,
https://github.com/aadl/devnotes,,
https://github.com/stejasvin/Questionnaire,,
https://github.com/fletchwsf/Tank-Pressurized,,
https://github.com/Kungsbacka/AADLicense,"# AADLicense

PowerShell module for working with Office 365 licenses.

## Description

This is a module to make it more convenient to work with Office 365 licenses with the AzureAD module by letting the user reference the licenses and service plans by display name instead of by GUID.

There is also support for packaging licenses and disabled service plans and reference them together. This i similar to how you would work with group based licensing in Azure AD.
",layered architecture
https://github.com/Elphyn/aadljfdsjf,,
https://github.com/r-universe/aadler,,
https://github.com/aadly85/aadlylabs,,
https://github.com/scottperham/AADLab,# AADLab,
https://github.com/devmohsene/solde_app,"# solde_app

solde logement aadl

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://docs.flutter.dev/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://docs.flutter.dev/cookbook)

For help getting started with Flutter development, view the
[online documentation](https://docs.flutter.dev/), which offers tutorials,
samples, guidance on mobile development, and a full API reference.
#   s o l d e _ a p p 
 
 ",layered architecture
https://github.com/bhavanaswarna/AADLab,# AADLab,
https://github.com/Nemojn/AADLLEDcode,,
https://github.com/SathvikaAnkam/AADLab,# AADLab,
https://github.com/aloliveira/aadl-bvr,,
https://github.com/sireum/aadl-gumbo,,
https://github.com/nikhilakn/AADL-MDSD,,
https://github.com/ayavvv/idelab,,
https://github.com/virtuald/language-aadl,"AADL language support in Atom
=============================

Adds syntax highlighting to AADL files in the Atom editor

Credit
------

The original version of this package is derived from the textmate bundle for AADL
created by Julien Delange, which can be found at
https://github.com/OpenAADL/ocarina/tree/master/resources/textmate/AADL.tmbundle
",layered architecture
https://github.com/SohamDave08/AADL-Project,"# About
“Blood Point” is an android application to collect or donate blood easily. Users who have an android phone & active internet connection can contact and start searching for a donor easily through this application. The purpose of this application is to help people belonging to rural areas.

# Features
Easy contact between blood donor and blood recipient through this android application.<br>
Included:
- User Databases
- User Login & Sign up
- Donor Details
- Finding blood group easily
- Finding Near By Hospitals
- Achievements & Rewards
       
# Tools used
- Firebase Database
- Firebase Authentication
- Google Maps Api
- Android Studio IDE
- Android version 4.0 or later
- Android SDK 17-28
  
# How to install?

You can install this application to test on your android smartphone. To download the signed application go to your chrome browser and copy-paste the download link:

```
https://github.com/imShakil/BloodBank/releases/latest/download/blood-point.apk
```

Download will be started automatically. After then install it on your android device.
Open the application, create an account. That's it.

N.B: It supports only in android version 4.0 or later.

# Preview:
<img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/spalsh.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank2.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank6.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank3.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank4.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank1.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank5.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> 



![](https://img.shields.io/github/stars/imshakil/BloodBank.svg)
![](https://img.shields.io/github/forks/imshakil/BloodBank.svg)
[![HitCount](http://hits.dwyl.io/imshakil/BloodBank.svg)](http://hits.dwyl.io/imshakil/BloodBank)
![](https://img.shields.io/github/tag/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/v/release/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/issues/imshakil/BloodBank.svg) 


# Database Snapshot
Follow this link: https://github.com/imShakil/BloodBank/wiki/Databse-Snapshots
(This project can be used for any educational purpose and can be changed or modified in need.<br><b> A star will be appriciated if you think it might be helpful.</b>)<br>

# Changing Database and Package Name
I got so many mails on about 'How to change Database link and Package Name'. So, Who has queries can watch this video: https://www.youtube.com/watch?v=nAzAo7shGKQ&ab_channel=AnubhavAnand

","layered architecture, microservices architecture"
https://github.com/m-strzalkowski/AADL_RASPBERRY,"# AADL_RASPBERRY
Projekt z przedmiotu ""systemy czasu rzeczywistego"".
",
https://github.com/osate/aadl-website,"# aadl-website
",
https://github.com/why4000/AADL_study,"# AADL_study
Osate学习
",
https://github.com/bressan3/AADL-Tutorial,,
https://github.com/rvnbrz/FORA-AADL,"Hello everyone! 

This Git will be used to finalise the FORA AADL model. 

Bahram and I will be the admins for the time being and will orchestrate 
the discussions.

If you have issues that concern other ESR's or questions in general, 
please use the issues in this Git, where you can assign tasks to 
other members. 

More Infos are about to come! 
 
",N/A
https://github.com/athu29/E1_Grp7_Trip-planner-app,"# E1_Grp7_Trip-planner-app
AADL PROJECT (118A3009 , 118A3011 , 118A3018)
",
https://github.com/WilliamPsc/uavAADL,"uavAADL
",
https://github.com/brlarson/AADL-projects,,
https://github.com/santoslab/aadl-examples,"# AADL-examples
",
https://github.com/lumagateinc/aadlogarch-samplefiles,# aadlogarch-samplefiles,
https://github.com/rexroof/aadl-talker,"# aadl-talker
This is a cloud function that generates an mp3 from the next book due on your Ann Arbor Public Library account.
",microservices
https://github.com/jasonbelt/aadl-models,"aadl-models
===========
For any question/contact, please send an e-mail to
julien@gunnm.org.

",
https://github.com/kimaya23/Aadl-Project,"# About
“Blood Point” is an android application to collect or donate blood easily. Users who have an android phone & active internet connection can contact and start searching for a donor easily through this application. The purpose of this application is to help people belonging to rural areas.

# Features
Easy contact between blood donor and blood recipient through this android application.<br>
Included:
- User Databases
- User Login & Sign up
- Donor Details
- Finding blood group easily
- Finding Near By Hospitals
- Achievements & Rewards
       
# Tools used
- Firebase Database
- Firebase Authentication
- Google Maps Api
- Android Studio IDE
- Android version 4.0 or later
- Android SDK 17-28
  
# How to install?

You can install this application to test on your android smartphone. To download the signed application go to your chrome browser and copy-paste the download link:

```
https://github.com/imShakil/BloodBank/releases/latest/download/blood-point.apk
```

Download will be started automatically. After then install it on your android device.
Open the application, create an account. That's it.

N.B: It supports only in android version 4.0 or later.

# Preview:
<img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/spalsh.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank2.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank6.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank3.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank4.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank1.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank5.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> 



![](https://img.shields.io/github/stars/imshakil/BloodBank.svg)
![](https://img.shields.io/github/forks/imshakil/BloodBank.svg)
[![HitCount](http://hits.dwyl.io/imshakil/BloodBank.svg)](http://hits.dwyl.io/imshakil/BloodBank)
![](https://img.shields.io/github/tag/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/v/release/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/issues/imshakil/BloodBank.svg) 


# Database Snapshot
Follow this link: https://github.com/imShakil/BloodBank/wiki/Databse-Snapshots
(This project can be used for any educational purpose and can be changed or modified in need.<br><b> A star will be appriciated if you think it might be helpful.</b>)<br>

# Changing Database and Package Name
I got so many mails on about 'How to change Database link and Package Name'. So, Who has queries can watch this video: https://www.youtube.com/watch?v=nAzAo7shGKQ&ab_channel=AnubhavAnand

","layered architecture, microservices architecture"
https://github.com/soney/aadl_nytimes,"# AADL NYTimes Bookmarklet

The [Ann Arbor District Library (AADL)](https://aadl.org/) offers free digital access to [the New York Times](https://www.nytimes.com/) for members. However, it can be a bit of a pain to access.

To make it easier, you can **add this link as a browser bookmark**: <a href=""javascript:void(window.location.href = window.location.href.replace(/https:\/\/www.nytimes.com\//, 'https://www-nytimes-com.research.aadl.org/'));"">📰 Access through AADL</a>. You can do this by:

- Select and drag the link into your bookmarks bar,
- right click the link and use the option to add a bookmark, or
- find an option to add a bookmarklet manually, copy the code from the link above, and paste it as the URL.

![An animation of a user dragging a bookmark to the bookmark bar](add_bookmarklet.gif)

Then, any time you are on a New York Times page (including one that is restricted), you can click the bookmark link to access it.

![An animation of a user clicking the bookmark while on a New York Times page](using_extension.gif)


## How does it work?

When you click the link, a short JavaScript snippet gets run to navigate to access that page through the AADL. The code runs the code at the end of the page, (which simply replaces the ""www.nytimes.com"" domain with ""www-nytimes-com.research.aadl.org""). More specifically, clicking the link runs the following code:
```javascript
window.location.href = window.location.href.replace(/https:\/\/www.nytimes.com\//, ""https://www-nytimes-com.research.aadl.org/"");
```

## Credit

The explanation of how to add the bookmarklet is taken from a page describing [another (very useful) bookmarklet from Michigan Libraries](https://www.lib.umich.edu/find-borrow-request/access-online-resources/remote-access/using-browser-bookmark).
",Client-server architecture
https://github.com/Ashutosh3011/Aadl-Project,"# About
“Blood Point” is an android application to collect or donate blood easily. Users who have an android phone & active internet connection can contact and start searching for a donor easily through this application. The purpose of this application is to help people belonging to rural areas.

# Features
Easy contact between blood donor and blood recipient through this android application.<br>
Included:
- User Databases
- User Login & Sign up
- Donor Details
- Finding blood group easily
- Finding Near By Hospitals
- Achievements & Rewards
       
# Tools used
- Firebase Database
- Firebase Authentication
- Google Maps Api
- Android Studio IDE
- Android version 4.0 or later
- Android SDK 17-28
  
# How to install?

You can install this application to test on your android smartphone. To download the signed application go to your chrome browser and copy-paste the download link:

```
https://github.com/imShakil/BloodBank/releases/latest/download/blood-point.apk
```

Download will be started automatically. After then install it on your android device.
Open the application, create an account. That's it.

N.B: It supports only in android version 4.0 or later.

# Preview:
<img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/spalsh.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank2.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank6.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank3.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank4.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank1.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank5.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> 



![](https://img.shields.io/github/stars/imshakil/BloodBank.svg)
![](https://img.shields.io/github/forks/imshakil/BloodBank.svg)
[![HitCount](http://hits.dwyl.io/imshakil/BloodBank.svg)](http://hits.dwyl.io/imshakil/BloodBank)
![](https://img.shields.io/github/tag/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/v/release/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/issues/imshakil/BloodBank.svg) 


# Database Snapshot
Follow this link: https://github.com/imShakil/BloodBank/wiki/Databse-Snapshots
(This project can be used for any educational purpose and can be changed or modified in need.<br><b> A star will be appriciated if you think it might be helpful.</b>)<br>

# Changing Database and Package Name
I got so many mails on about 'How to change Database link and Package Name'. So, Who has queries can watch this video: https://www.youtube.com/watch?v=nAzAo7shGKQ&ab_channel=AnubhavAnand

","layered architecture, microservices architecture"
https://github.com/rmijacques/tpAADL,,
https://github.com/mateon1/AADL-Wobbuloscope,,
https://github.com/sma350/AADL-examples,"# AADL-examples
",
https://github.com/Nevaan/aadl_model,,
https://github.com/fcc-ea-mirror/2AADL,"# GUOYA ELECTRONIC TECHNOLOGY CO., LTD. (2AADL)
## FCC Device Exhibits

```
./fcc-id/application-id/exhibit-id.ext
```

This repository contains the exhibit documents submitted by GUOYA ELECTRONIC TECHNOLOGY CO., LTD. to (and published by) the FCC as part of the device certification process.

These exhibits can include **internal photos**, **external photos**, **RF test reports**, **block diagrams**, **operational descriptions**, **schematics**, **user manuals**, and various **correspondence**.

The top-level directories are sliced by the FCC ID of each device.

The second-level directories are named according to the application UUIDs. *Each FCC ID includes one or more application.*

Within each application directory are the exhibits submitted with that application. 

## Exhibit Manifest

```
./manifest.json
```

JSON manifest which describes each exhibit submitted by GUOYA ELECTRONIC TECHNOLOGY CO., LTD. and published by the FCC.

- FCC ID
- Grantee Code
- Product Code
- MD5
- Path
- File Extension
- Content Type
- Size
- Exhibit ID
- Exhibit Description
- Exhibit Type
- Date Submitted
- Date Available
- Grant Notes

## Device List
## 2AADL-E702B
**Grant Notes:** Wireless Headphone

| Description | Type | Ext | Size | Submitted | Available |
| ----------- | ---- | --- | ---- | --------- | --------- |
| [Confid](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976465.pdf) | cover_letter | pdf | 35849 | 2013-05-28 | 2013-05-28 |
| [Authorization](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976466.pdf) | cover_letter | pdf | 151203 | 2013-05-28 | 2013-05-28 |
| [Ext](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976467.pdf) | external_photos | pdf | 72961 | 2013-05-28 | 2013-05-28 |
| [Label](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976470.pdf) | id_label_location_info | pdf | 38586 | 2013-05-28 | 2013-05-28 |
| [Int](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976469.pdf) | internal_photos | pdf | 153230 | 2013-05-28 | 2013-05-28 |
| [RFx](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976471.pdf) | rf_exposure_info | pdf | 153432 | 2013-05-28 | 2013-05-28 |
| [DSS Report](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976468.pdf) | test_report | pdf | 1033213 | 2013-05-28 | 2013-05-28 |
| [Setup](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976473.pdf) | test_setup_photos | pdf | 130973 | 2013-05-28 | 2013-05-28 |
| [Manual](2AADL-E702B/cdf119722ed0cf6c52b8dd27c577f308/1976474.pdf) | users_manual | pdf | 111857 | 2013-05-28 | 2013-05-28 |
",Not applicable
https://github.com/Ellidiss/aadl-ellidiss,"# SysML v2 support for Visual Studio Code

<table>
<tr>
<td>
    <p>
      <b>This extension is in active development and follows the monthly release of the <a href=""https://github.com/Systems-Modeling/SysML-v2-Release"">SysML v2 specification</a>.</b>
    </p>
    <p>
    Edit your SysML v2 model with the Visual Studio Code SysML v2 extension.
    </p>
    <p>
    This extension adds full textual support for SysML v2 files into Visual Studio Code, including features such as syntax highlighting, outlines, error detection, reference navigation. It supports the release 2022-08 release of the <a href=""https://github.com/Systems-Modeling/SysML-v2-Release"">SysML v2 specification</a>.
    </p>
    <p>
    This extension is provided free of charge by <a href=""https://www.ellidiss.com"">Ellidiss Technologies</a>.
    </p>
    <p>
    For any question, problem or new requirements, please contact us at <a href=""mailto:support@ellidiss.com"">support@ellidiss.com</a>.
</td>
<td width=""30%""> <img width=""100%"" src=""https://www.ellidiss.fr/public/chrome/site/logoEllidiss.png"" alt=""Ellidiss logo""/> </td>
</tr>
</table>

![Syntax](assets/syntax.webp)

## Content

- [Features](#Features)
  - [Commands](#Commands)
- [Release Notes](#Release-Notes)
  - [0.1.0](#010)

## Features

This extension contains a full SysML v2 textual parser allowing error detection. It detects syntax parsing errors and presents them. It parses and checks errors in all opened files and files in the current workspaces. The reference resolution works across files and uses all parsed files in the workspaces.

![Error](assets/errors.webp)

When hovering a reference, if the referenced element contains documentation (comments preceding the declaration). It will be presented as an hover popup.

![Documentation](assets/documentation.webp)

The resolved references by the parser are navigable in Visual Studio Code. Both by `Ctrl+Click` (or `Cmd+Click` on MacOS) to go to the definition or using *Go to References* or *Find all References*

![Navigation](assets/navigation.webp)

A full list of symbols is availaible using `Ctrl+P #` or `Cmd+P #`:

![Symbol](assets/symbols.webp)

This extension supports symbol renaming. By openning the contextual menu on a symbol and select `Rename Symbol` or by simply using `F2`, the extension will rename the symbol to the new name.

![Rename](assets/rename.webp)

### Commands

A command named `AADL: Create Prolog facts from source` will create a Prolog facts base for the selected AADL file. This facts base is compatible with the LMP model processing technology that is used by [AADL Inspector](#AADLInspector-Integration).

The command `AADL: Split file into one file for each package (OSATE compabitility)` split openned file into one file for each package.

## Release Notes

### [0.1.0]

Initial release of `aadl-ellidiss`
",N/A
https://github.com/Hallie-zz/AADL_Flight,,
https://github.com/kazum1kun/KWIC-AADL,,
https://github.com/shettypooja13/E3_4_Air-Quality-and-Weather,,
https://github.com/jcl-aadlab/jcl-aadlab,"- 👋 Hi, I’m Jorge
- :factory_worker: I am a developer in Aadvantage Lab
- 👀 I’m interested in building digital products
- 🌱 I’m currently working with netcore, c#, blazor, tailwind... :) and also with legacy systems in vb6, cr :(

","MVC, layered architecture"
https://github.com/timjencar/aadl-work,"aadl-work
=========
",
https://github.com/precla/hrt-aadl,"## HRT Audio Archive Downloader (HRT-AADL)


## Overview

- HRT audio archive downloader is a simple tool to download audio files from http://radio.hrt.hr/arhiva/*
- For example, from: http://radio.hrt.hr/arhiva/dogodilo-se-na-danasnji-dan/9


# Usage

- hrt.py -u ""http://radio.hrt.hr/arhiva/dogodilo-se-na-danasnji-dan/9/"" -d ""C:\Downloads\""


## System requirements

- Python 3.x, 2.7.x


## Releases & Changelog

- See: [release list][releases]


## License

- GPLv3

[releases]: https://github.com/precla/hrt-aadl/releases",layered architecture
https://github.com/andreasemprebon/AADL_FEES,,
https://github.com/Vimal104/aadl-project,"# About
“Blood Point” is an android application to collect or donate blood easily. Users who have an android phone & active internet connection can contact and start searching for a donor easily through this application. The purpose of this application is to help people belonging to rural areas.

# Features
Easy contact between blood donor and blood recipient through this android application.<br>
Included:
- User Databases
- User Login & Sign up
- Donor Details
- Finding blood group easily
- Finding Near By Hospitals
- Achievements & Rewards
       
# Tools used
- Firebase Database
- Firebase Authentication
- Google Maps Api
- Android Studio IDE
- Android version 4.0 or later
- Android SDK 17-28
  
# How to install?

You can install this application to test on your android smartphone. To download the signed application go to your chrome browser and copy-paste the download link:

```
https://github.com/imShakil/BloodBank/releases/latest/download/blood-point.apk
```

Download will be started automatically. After then install it on your android device.
Open the application, create an account. That's it.

N.B: It supports only in android version 4.0 or later.

# Preview:
<img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/spalsh.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank2.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank6.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank3.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank4.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank1.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> <img src=""https://raw.githubusercontent.com/imShakil/BloodBank/master/bloodbank5.png"" alt=""Splash Screen"" width=""100"" height=""200"" /> 



![](https://img.shields.io/github/stars/imshakil/BloodBank.svg)
![](https://img.shields.io/github/forks/imshakil/BloodBank.svg)
[![HitCount](http://hits.dwyl.io/imshakil/BloodBank.svg)](http://hits.dwyl.io/imshakil/BloodBank)
![](https://img.shields.io/github/tag/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/v/release/imshakil/BloodBank.svg) 
![](https://img.shields.io/github/issues/imshakil/BloodBank.svg) 


# Database Snapshot
Follow this link: https://github.com/imShakil/BloodBank/wiki/Databse-Snapshots
(This project can be used for any educational purpose and can be changed or modified in need.<br><b> A star will be appriciated if you think it might be helpful.</b>)<br>

# Changing Database and Package Name
I got so many mails on about 'How to change Database link and Package Name'. So, Who has queries can watch this video: https://www.youtube.com/watch?v=nAzAo7shGKQ&ab_channel=AnubhavAnand

","layered architecture, microservices architecture"
https://github.com/Meet2674/aadl_project,"# aadl project
",
https://github.com/Fousq/DAPP_aadl,"# DAPP_aadl

Developed by Zhanbolat Orakbayev and Bauyrzhan Bolatbayev",
https://github.com/hampelm/aadl-scanner,,
https://github.com/Anshumaan-Chauhan02/NLPtoAADLArch,"<h2 align='center'><b> NLP to AADL Architecture </b></h2>

<h4 align='center'> Project Description </h4> 
This project is continuation of 'Toward Generating System Architecture and Formal Functional Description in the Architecture Analysis & Design Language (AADL) With Structured Natural Language'. Incorporation of more NLP in order to make sentences from English Language more acceptable (earlier too specific), assigning proper Electromechanical notations and flows, and much more is done. <br><br>

### Technical Skills 
![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)
![Java](https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&logo=java&logoColor=white)
![ANTLR4](https://img.shields.io/badge/ANTLR4-red?style=for-the-badge)
![Visual Studio Code](https://img.shields.io/badge/Visual%20Studio%20Code-0078d7.svg?style=for-the-badge&logo=visual-studio-code&logoColor=white)
![Jupyter Notebook](https://img.shields.io/badge/jupyter-%23FA0F00.svg?style=for-the-badge&logo=jupyter&logoColor=white)

### File Description and Content 
* NLPFormatter.py : Natural Language Processing done on the text to get it into proper compiler accepted format
* src/data/ : This folder contains all the English language inputs used for the testing of the system
* src/lib/ : Contains all the jar files and the compiler files (Lexer, Parser and Visitor)
* src/main/GrammarVerifier.java : Verifies whether the input text is according to the syntax
* src/main/Main.java : Execution file that takes the input file and generates the AADL code as an output
* src/main/Visitor.java : Compiler that does the conversion of parsed text input to corresponding AADL code 
",layered architecture
https://github.com/TomaszSzmuc/AADL_Osate,,
https://github.com/VUISIS/MitesAADL,# MitesAADL,
https://github.com/ErykSuguiura/ModelagemAADL,"# ModelagemAADL
Repositório para projetos realizados na plataforma OSATE, com a linguagem de modelagem AADL
",Layered architecture
https://github.com/YaoGuai1/aadl_project,"# aadl project
",
https://github.com/chaima96-DS/DARE-aadl,,
https://github.com/wlgs/aadl-shutter,,
https://github.com/rschuerer/AAdLoginTest,,
https://github.com/kazum1kun/ElectricScooter-AADL,,
https://github.com/ehah/AADL-DEVS-Framework,,
https://github.com/danielwangksu/TempControlAADL,"# TempControlAADL
",
https://github.com/apalomino2/aadl-car-example,,
https://github.com/kbarszczak/Drinks_vending_machine_aadl,"# Drinks_vending_machine_aadl
The implementation of a drinks vending machine in AADL modeling language
",layered architecture
https://github.com/aadliyasmine/aadliyasmine.github.io,# aadliyasmine.github.io,
https://github.com/saeaadl/emv2,"# AADL Error Model V2 annex language 

This repository captures errata and discussions for the AADL Error Model V2 annex language.
See Issues for more details

",N/A
https://github.com/schatra/AADLModel_SmartThermostat,"# AADLModel_SmartThermostat
AADL is Architecture Analysis and Description Language, designed and developed by the SAE for specification, analysis automated integration and code generation of real-time performance-critical (timing, safety, fault tolerant etc.)  distributed computer systems. The Smart Thermostat provides an additional functionality to adjust the temperature remotely through an app on the Smart Phone. It provides various benefits to the user and it also saves energy consumption compared to the regular Thermostat.
","layered architecture, distributed architecture"
https://github.com/hrtejada/CarModelAADL,,
https://github.com/DGrzesik/TCS-ABS-AADL-models,"# TCS-ABS-AADL-models
AADL model of the Anti-lock Breaking System and Traction Control System for the Real Time Systems Course
",software architecture
https://github.com/AdletA/aadlet.github.io,# aadlet.github.io,
https://github.com/gandorm/Vending-Machine-AADL,# Vending-Machine-AADL,
https://github.com/WangShanyue/AADl-TO-ADA,,
https://github.com/qb1141644609/req2aadl,"# -
加入数组后的需求代码
",
https://github.com/b-rib/aadl_floripasat1,# aadl_floripasat1,
https://github.com/ferhen/StereoCamAADL,# StereoCamAADL,
https://github.com/sholomc/SCSDemo,"Demo of AADL models and multiple updates

This repository will contain requirements and models for the SCS.
",N/A
https://github.com/sireum/aadl-gumbo-update-site,"# AADL GUMBO Update Site

## How to Install

Install [Sireum](https://github.com/sireum/kekinian#installing) (or update an existing installation, see below) and then execute the following on Mac/Linux

```
$SIREUM_HOME/bin/sireum hamr phantom -u
```

or the following on Windows

```
%SIREUM_HOME%\bin\sireum.bat hamr phantom -u
```

**NOTE**: the ``-u`` phantom option also installs/updates the following Sireum OSATE plugins:
* Base - transforms core AADL to [AIR](https://github.com/sireum/air)
* CLI - provides a CLI for Sireum based OSATE plugins ***(documentation forthcoming)***
* [AWAS](https://awas.sireum.org/) - information flow analyzer and visualizer for component-based systems
* [HAMR](https://hamr.sireum.org) - code generation from AADL models

Pass phantom's ``--help`` option for more information (e.g. how to install plugins into an existing OSATE installation)

## How to Install into FMIDE

```
$SIREUM_HOME/bin/install/fmide.cmd
```

## How to Update

First close OSATE if open, then update HAMR Codegen by updating Sireum

```
cd $SIREUM_HOME
git pull --recurse
bin/build.cmd
```

This will update ``$SIREUM_HOME/bin/sireum.jar`` which will be used by the AADL GUMBO plugins when OSATE is relaunched.

To update the OSATE plugins themselves simply rerun the ``hamr phantom`` command from the
[How to Install](#how-to-install) section (only needed when new versions of the plugin are released)


**Releases**

- [1.2022.06011655.d0c1d8e](1.2022.06011655.d0c1d8e)
- [1.2022.06081955.eb93186](1.2022.06081955.eb93186)
- [1.2022.06151822.8f00475](1.2022.06151822.8f00475)
- [1.2022.06161903.68c1896](1.2022.06161903.68c1896)
- [1.2022.06222050.06a7060](1.2022.06222050.06a7060)
- [1.2022.06242122.c1af472](1.2022.06242122.c1af472)
- [1.2022.06282118.230473f](1.2022.06282118.230473f)
- [1.2022.07051018.a740565](1.2022.07051018.a740565)
- [1.2022.08091444.f63660a](1.2022.08091444.f63660a)
- [1.2022.08111537.0f97c79](1.2022.08111537.0f97c79)
- [1.2022.08191219.82466d5](1.2022.08191219.82466d5)
- [1.2022.08221314.0e4052e](1.2022.08221314.0e4052e)
- [1.2022.08231211.b12db9b](1.2022.08231211.b12db9b)
- [1.2022.10071304.a32b5c7](1.2022.10071304.a32b5c7)
- [1.2022.10111602.ca0ff6f](1.2022.10111602.ca0ff6f)
- [1.2022.11022102.e599639](1.2022.11022102.e599639)
- [1.2023.03231646.2bf1dca](1.2023.03231646.2bf1dca)
- [1.2023.04051454.3dcd426](1.2023.04051454.3dcd426)
- [1.2023.07271345.065b5fa](1.2023.07271345.065b5fa)
- [1.2023.08021014.21d7eb2](1.2023.08021014.21d7eb2)
- [1.2023.10061732.b0cf3cb](1.2023.10061732.b0cf3cb)
- [1.2024.02220830.4d67aa7](1.2024.02220830.4d67aa7)
- [1.2024.02261857.2928b1b](1.2024.02261857.2928b1b)
",Layered architecture
https://github.com/hhzzk/smart-home-arch,,
https://github.com/saeaadl/info,"# info
General documentation and information regarding AADL
",
https://github.com/mohammadmahdikarimi/XDL-to-AADL-Open-Tool,,
https://github.com/RookieRed/aadl-m2dl-2019,,
https://github.com/suweining/AADL_in_K,,
https://github.com/aloliveira/aadl-adapter-4-bvr,,
https://github.com/SimplisticCode/HomeAutomationAADL,,
https://github.com/florekkinga/TicketMachine_AADLProject,# TicketMachine_AADLProject,
https://github.com/devmohsene/aadl_acts_login,"<p align=""center""><a href=""https://laravel.com"" target=""_blank""><img src=""https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg"" width=""400""></a></p>

<p align=""center"">
<a href=""https://travis-ci.org/laravel/framework""><img src=""https://travis-ci.org/laravel/framework.svg"" alt=""Build Status""></a>
<a href=""https://packagist.org/packages/laravel/framework""><img src=""https://img.shields.io/packagist/dt/laravel/framework"" alt=""Total Downloads""></a>
<a href=""https://packagist.org/packages/laravel/framework""><img src=""https://img.shields.io/packagist/v/laravel/framework"" alt=""Latest Stable Version""></a>
<a href=""https://packagist.org/packages/laravel/framework""><img src=""https://img.shields.io/packagist/l/laravel/framework"" alt=""License""></a>
</p>

## About Laravel

Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:

- [Simple, fast routing engine](https://laravel.com/docs/routing).
- [Powerful dependency injection container](https://laravel.com/docs/container).
- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.
- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).
- Database agnostic [schema migrations](https://laravel.com/docs/migrations).
- [Robust background job processing](https://laravel.com/docs/queues).
- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).

Laravel is accessible, powerful, and provides tools required for large, robust applications.

## Learning Laravel

Laravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.

If you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.

## Laravel Sponsors

We would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel [Patreon page](https://patreon.com/taylorotwell).

### Premium Partners

- **[Vehikl](https://vehikl.com/)**
- **[Tighten Co.](https://tighten.co)**
- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**
- **[64 Robots](https://64robots.com)**
- **[Cubet Techno Labs](https://cubettech.com)**
- **[Cyber-Duck](https://cyber-duck.co.uk)**
- **[Many](https://www.many.co.uk)**
- **[Webdock, Fast VPS Hosting](https://www.webdock.io/en)**
- **[DevSquad](https://devsquad.com)**
- **[Curotec](https://www.curotec.com/services/technologies/laravel/)**
- **[OP.GG](https://op.gg)**
- **[WebReinvent](https://webreinvent.com/?utm_source=laravel&utm_medium=github&utm_campaign=patreon-sponsors)**
- **[Lendio](https://lendio.com)**

## Contributing

Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).

## Code of Conduct

In order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).

## Security Vulnerabilities

If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.

## License

The Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).
#   a a d l _ a c t s _ l o g i n 
 
 ",layered architecture
https://github.com/behenate/aadl-bottle-filling,"# Bottle Filling Plant

## Purpose of the system 
The purpose of the modeled system is to represent a simple water bottling station for drinking water. The model must include components that allow handling water from the source to the moment of filling the bottle.
## List of components with a comment 
### Devices 
  - Water Pipe - can be treated as the water source for the entire system. It has a water flow meter. Based on this, the system can determine if a sufficient amount of water is supplied.
  - Filter - This is a filter that has the functionality of informing about the need for replacement. If the filter is used up, the system should block the bottling of water.
  - Water Quality Sensor - Located behind the filter. It informs the system about the quality of the water flowing through the filter.
  - Filling Valve - Determines the flow of water into the bottle. The system should open and close the valve based on information received from other devices.
  - Bottling Sensor - a special sensor that allows detecting whether the bottle is under the nozzle of the filling valve and informs about the filling of the bottle.
  - Production Conveyor Belt - the system has the ability to stop and start the conveyor belt and set its speed. The conveyor belt reports its speed to the system which allows detecting incorrect operation.

### Abstract Elements 
  - Operator Interface - The system assumes the existence of an interface for the operator of the bottling station. The aim of the system is not to create this interface, however, the system assumes that it can accept instructions from the operator.
### Processors and Buses 
  - Main processor - the processor handling the entire system. It is capable of performing 650 mips.
  - Main bus - The bus connecting all devices to the processor. BandWidthCapacity: 200MBps, BandwidthBudget: 950 KBps

### Processes 
  - Main process - the system assumes the existence of only one main process managing the operation of the entire filling station. All the aforementioned devices are connected to this process. Information to them is received and processed through several threads listed below.
### Threads 
  - Water Analysis Thread - A thread processing data from the water pipe, filter, and water quality sensor. Based on these three values, it creates information about the water needed for the filling thread.
  - Filling Thread - A thread processing data from the bottling sensor and receiving data from the water analysis thread, based on which it decides whether the valve should be opened according to the received information. The thread does not make the final decision on opening the valve but passes the expected valve state to the control thread.
  - Operator Thread - Processes input from the operator interface and sends information to the control thread.
  - Conveyor Belt Thread - Processes information received from the conveyor belt. It sends information to the conveyor belt about what its speed should be and sends information to the control thread about whether the conveyor belt should be turned on.
  - Control Thread - Receives information from all other threads - whether the valve should be opened, operator commands, and starting the conveyor belt. It processes the received information and makes the final decision on activating the valves and starting the conveyor belt.
## Model - Drawings 
### Threads 
![water-input-thread](https://github.com/behenate/aadl-bottle-filling/assets/31368152/479930ce-83cc-4dc5-9af1-e677fb8bfc85)
![control-thread](https://github.com/behenate/aadl-bottle-filling/assets/31368152/4a89444e-b0f7-4f06-abde-8cb55a245866)
![conveyor-thread](https://github.com/behenate/aadl-bottle-filling/assets/31368152/5c25c365-91b0-4088-986e-72dce826463d)
![filling-thread](https://github.com/behenate/aadl-bottle-filling/assets/31368152/f2fde94d-7ddd-4c5f-b8f1-9774ce464913)


### Control System - Main Process
![control-system](https://github.com/behenate/aadl-bottle-filling/assets/31368152/29bf5621-55f5-40f2-b75d-91a3456da937)


### Simplified System View 
![Diagram-simple](https://github.com/behenate/aadl-bottle-filling/assets/31368152/78b8196c-5547-4a3e-9130-5ba0278656c1)

### Detailed System View 
![diagram](https://github.com/behenate/aadl-bottle-filling/assets/31368152/93cf97e3-ea57-497b-81c8-a7d02e5b3a2f)
",layered architecture
https://github.com/MaxSprauer/aadl_summer_game,"# aadl_summer_game
Postman collection to batch-submit library codes for the Ann Arbor District Library Summer Game

You must be familiar with Postman to use this.  Some handy references:
* [Intro to collection runs](https://learning.getpostman.com/docs/postman/collection_runs/intro_to_collection_runs)
* [Working with data files](https://learning.getpostman.com/docs/postman/collection_runs/working_with_data_files)
* [Test scripts](https://learning.getpostman.com/docs/postman/scripts/test_scripts)
* [Postman Sandbox](https://learning.getpostman.com/docs/postman/scripts/postman_sandbox)

To get started:
1. Set the {{user}} and {{pass}} variables to your library username and password.
2. In the Collection Runner interface, check the ""Keep variable values"" and ""Save cookies after collection run"" boxes.  
3. In the View menu, choose Show Postman Console.
4. Configure only the Login script to run, and run the collection.  At this point, you should be logged in.
5. Create a .csv file with a single column and the header ""gamecode"" on the first line.

For example:
```csv
gamecode
SNACKATTACK
WACKBACKPACK
RALPHLAURENHILL
```

6. Change the collection to run only the Get Populated Form and Post Code scripts.
7. Use your CSV file as the data file.
8. Run the collection.  You should see your score increment in the Console window as each code is submitted.

",layered architecture
https://github.com/iamjuant/speedRegulationAADL,"# Speed Regulation Example

This example shows an analytical architectural-fault-modeling approach can be used to model speed regulation in a self-driving automobile.

A complete description this example is available in the case-study is available in the handout materials for the webinar [Architecture Analysis with
AADL
The Speed Regulation CaseStudy](https://resources.sei.cmu.edu/asset_files/Webinar/2014_018_101_424910.pdf)

### Organization of the example

The two implementations are in integration.aadl as integration.implementation1 and integration.implementation2. 

The diagrams shown in slides 41 and 42 correspond almost exactly to the diagrams that are generated by right clicking on the desired implementation model and selecting ""Create Diagram"". The resulting diagram will be missing the actual processer bindings shown in the slides. To show those right click on the diagram and select ""Configure Diagram"". In the AADL Properties section towards the bottom select Add->deployment properties->actual processor binding.

### Analyses supported by this model
* EMV
* Latency
* Resources and Budgets

### Differences from the webinar handout

The FTA and Fault Impact analyses results cannot be duplicated in the current version of OSATE. The webinar relied on tools that have since been deprecated. There are only minor differences in the model itself.

### Conducting analysis

To analyze implementation 1 or implementation 2 select it (integration.aadl integration.implementation1 or integration.implementation2) and right-click ""Instantiate"". Then select one of the instantiations, right-click and choose the Analyses menu item.

* FHA results are identical to the presentation
* FTA results are not comparable (see above)
* Fault Impact results are not comparable (see above)


6/11/2020

","layered architecture, service-oriented architecture (SOA)"
https://github.com/aadl-abd-alazez/aadl-abd-alazez,,
https://github.com/lynquantumman/AADL-attributes-addition,"# AADL-attributes-addition
This repository is to add reliability attribute and real-time attribute addition

the function named get in ReliabilityProperties is to get the Reliability attribute in java properties.

Line2CertainString is to judge if a line satisfy some kind of rules, and return a certain string

Based on the string, the main function add some special reliability or real-time attributes in the AADL file below that line
",layered architecture
https://github.com/ksron/Master_Thesis_HybridSynchAADL,,
https://github.com/mmanjun/AADLModel_HomeSecuritySystem,"# AADLModel_HomeSecuritySystem
AADL is Architecture Analysis and Description Language, deesigned and developed by the SAE for specification, analysis, automated integration and code generation of real-time performance-critical (timing, safety, schedulability, fault tolerant, security, etc.) distributed computer systems. This project contains an AADL model for Home Security System which includes the Burglar as well as Fire Alarm systems. The project also involves modules for analysis and validation of the model. 
",",Model-view-controller (MVC) architecture"
https://github.com/V0idwu/ITU_Example_AADL,"# ITU_Example_AADL
ITU_Example_AADL
",
https://github.com/wsu-smartcity/AADL-EDS-Model,,
https://github.com/osate/propertiescodegen,"# propertiescodegen
Generate Java code from AADL property types
",
https://github.com/ntumkur/SmartThermostatSystem,"# SmartThermostatSystem
An AADL model for SmartThermostat System
",
https://github.com/scarrillo9/DHsystem,"# DHsystem
Software Architecture in AADL for DigitalHome System
",layered architecture
https://github.com/aloliveira/aadl-error-annex-and-bvr,# aadl-error-annex-and-bvr,
https://github.com/FelipeFL96/SE206_TP3_AADL,,
https://github.com/al-lopez-techandacct/LocalAdminAcctForAADLaps,,
https://github.com/class-snct-rikitakelab/AADL_BlockSideBySide,,
https://github.com/Priyanka-Jaiswal/AADL-Architecture-of-Smart-Parking-,# AADL-Architecture-of-Smart-Parking-,layered architecture
https://github.com/YoungCC/An-AADL-Model-of-Smart-Home-System,"# An-AADL-Model-of-Smart-Home-System
This project developed an AADL model of the smart home system.


",N/A
https://github.com/snek-testing-bot/snek-test-p0aadl-1687648806393,,
https://github.com/mjsabby/NativeWindowsClientInteractiveAADLoginTool,"# NativeWindowsClientInteractiveAADLoginTool
Windows only, native client redirect url with token cache aad login tool
",N/A
https://github.com/bulletshot60/water-level-sensor,,
https://github.com/tylerm007/waad-sso,"waad-sso
========

Microsoft Azure Active Directory Single Signon JavaScript solution using AADL

1) need to build aht azure-activedirectory-library JAR locally 
https://github.com/tylerm007/azure-activedirectory-library-for-java

2) build this project
>mvn clean install

3) Modify the file test.js to contain your test values (clientID, clientSecret, tenantName, etc)

4) use the run.cmd to create the classpath and execute the local rhino script


to see how this works - you can run Java the main() program in WaadAuthentication
",layered architecture
https://github.com/ashish2105/SmartHome,"# SmartHome
Developed a design for smart home using AADL 
",N/A
https://github.com/Meiji-Y/MeceLearningSystem,"# MeceLearningSystem
Software Architecture Design for MeceLearningSystem with using AADL

Our application category is e-learning. E-learning app is made to distribute educational materials and courses via computers, tablets, and other electronic devices. With the help of these apps, students have the freedom to study when and how they choose.
",layered architecture
https://github.com/Boro2001/systemy-czasu-rzeczywistego,,
https://github.com/luciferpop/Isolette,"# README #

An Isolette is an incubator for an Infant that provides controlled temperature, humidity, and oxygen. The purpose of the Isolette Thermostat is to maintain the air temperature of an Isolette within a desired range. If the temperature falls too far below or rises too far above the Desired Temperature Range, it activates an alarm to alert the Nurse.","layered architecture, event-driven architecture"
https://github.com/miltoncs/AviationRequirementModeling,,
https://github.com/lias-laboratory/parad,"# PARAD: Model-based Performance Analysis Repositories for Aadl Designs

PARAD (Performance Analysis Repository for Aadl Designs) is a framework under development at LIAS, ENSMA. PARAD presents a new collaborative approach to the problem of automatically finding appropriate tests for a given system design which is always led by experience of designers. The new approach consists in construction of an Analysis Repository which capitalizes efforts of analysts. The analysts describes their analyses and the accompanied assumptions using PARAD's concepts.

![](parad_utilization.png)

## Core concepts

*ContextModel* (or Context  in short) represents the analysis situation of system that let us know about what scheduling theory can be used to model the system and which analysis technique can be used to analyze the system.

*Test* represents an analysis technique to analyze the system. Since *ContextModel* represents analysis situation, in a Context  a number of *Tests* is available. TestImplementation represents an implementation of Test on an analysis tool such as _RtDruid_, _Simso_, _MAST_ and _Cheddar_, etc.

*IdentificationRule* is the cornerstone concept of PARAD. An *IdentificationRule* represents an assumption on the system. The assumptions of scheduling theory that a *ContextModel* represents can be interpreted by a list of *IdentificationRules* with the expected value. To a *Context*, the expected value of IdentificationRule  on a system can be true if this *IdentificationRule* corresponds to any assumption of the Context or false if this *IdentificationRule* is contradictory to any assumption or indifferent if this *IdentificationRule* has no relation with all assumptions that the Context ensures.

We also provide some important characteristics of *Test* to a *ContextModel*.

* A *Test* is sufficient to a Context if the success of this test in this Context is enough to conclude that the system is schedulable.
* A *Test* is necessary to a Context if the failure of this test in this Context is enough to conclude that the system not schedulable.
* A *Test* is exact to a Context if it is both sufficient and necessary.

We also consider sustainability aspect. Sustainability is the capability of maintaining the analysis results after possitively changing analysis parameters such as _period_, _dealine_ and _execution-time_, etc.

## Identification Process

Identification Process is the way that PARAD seeks for appropriate Context for a given system designed in AADL. This process is composed of two steps.

* The first step consists in evaluating the list of identification rules on the system.
* The second step consists in comparing the obtained evaluation value of each rule with its expected value in a Context.

The appropriate Context is the one which has all expected value satisfied.

To be automatable, the IdentificationRule must be interpreted in a formalism that the machine can process. We opt for the constraint language OCL and LUTE due to their large utility for querying AADL model. At this state of PARAD, Users can choose one from these two formalisms to interpret their assumptions.

## User manual

Users can contribute their own analysis in form of java executable file (*.jar). To be acceptable by PARAD, the result of analysis must be interpreted in a specific formalism whose meta-model can be found here _AnalysisResult.ecore_.

To be used by PARAD, users simply describe their analyses in PARAD's formalism and link the location of Java executable file (.jar) to each instance of _TestImplementation_.

The information of analysis needed by PARAD are :

* Priority (Optional)
* Utilization factor (Optional)
* Response time (Optional)
* Completion type(Mandatory)

Completion type is the finish state of analysis, it can be fail or succeed. Due to this property, we can deduce schedulability of studied system.

## Software license agreement

Details the license agreement of PARAD: [LICENSE](LICENSE)

## Historic Contributors

* [Yassine OUHAMMOU](https://www.lias-lab.fr/members/yassineouhammou/)
* [Thanh-Dat NGUYEN](https://www.lias-lab.fr/members/thanhdatnguyen/)

## Code analysis

* Programming Language: Java, EMF models.
","layered architecture, model-view-controller (MVC) architecture"
https://github.com/SoheilSalehian/CVDriverSafetySystem,,
https://github.com/mw1213/ParkingProject,"# ParkingProject
AADL Project for real time parking management system
",
https://github.com/steve855/pythonForPlanes,"pythonForPlanes
===============

This package is intended as a collection of build routines which will work well for sublime text 2.


Colour Schemes
--------------

Alt All Hallow's Eve
	A modified version of this theme without the grey background for plain tex

Build Scripts
-------------

python_inplace_build

	- Builds the current python package inplace with mingw32 as the compiler and gfortran as the fcompiler
	- Issues:
		- None


python_sphinx
	
	- Builds the sphinx website corresponding the the config file in the current directory
	- Issues:
		- Does not work on linux (maybe a python / sphinx issue)


tec360_macro

	- Executest a tecplot360 macro

LaTeX_dvi
	- Builds the current .tex into a dvi
	- Options located here 'http://users.phys.psu.edu/~collins/software/latexmk-jcc/latexmk-435.txt'

	_note::
		Does not convert the .dvi to a .ps then to a .pdf
",layered architecture
https://github.com/DArtagan/docker-cups-canon-ufr,"# docker-cups-canon-ufr
Based on aadl/cups, plus Canon UFR drivers
",
https://github.com/Ehevi/CoffeeMachine,"# Automatyczny ekspres do kawy
## Opis modelowanego systemu
### Przyjęte definicje
1. __`Podstawowe składniki`__, czyli `ziarna kawy`, `mleko`, `woda`. Żeby przygotować napój, użytkownik najpierw musi nimi uzupełnić odpowiednie pojemniki. O braku podstawowych składników użytkownik jest informowany za pomocą wyświetlacza.
2. __`Składniki`__, czyli `espresso`, `woda`, `mleko`, `spienione mleko`. Baza do przygotowania napojów - są to podstawowe składniki po poddaniu ich opowiedniej obróbce, tzn. podgrzaniu do określonej temperatury oraz wykonaniu różnych innych czynności, w zależności od potrzeb (zmienielenie kawy, zaparzenie kawy, spienienie mleka).
3. __`Instrukcja przygotowania napoju`__ - składniki ułożone w ciąg w kolejności, w której powinny znaleźć się w szklance. Bazowe porcje składników są stałe, ale w danym ciągu mogą występować wielokrotnie (np. podwójne espresso).
4. __`Napój`__ - efekt końcowy wykonania przez ekspres odpowiedniej instrukcji. Przykłady:
```
    Espresso: espresso
    Double espresso: espresso, espresso
    Americano: espresso, woda
    Cortado: espresso, mleko
    Flat white: espresso, spienione mleko
    Caffè latte: espresso, mleko, spienione mleko
    Latte macchiato: mleko, espresso, spienione mleko
    Cappuccino: espresso, spienione mleko, spienione mleko
```
### Scenariusz użytkowania systemu:
1. Użytkownik naciskając odpowiedni guzik wybiera program przygotowujący pożądany napój.
2. Ekspres analizuje dane z czujników w pojemnikach w celu sprawdzenia, czy znajduje się tam wystarczająco dużo podstawowych składników. Jeżeli nie, informuje o tym użytkownika i zawiesza dalsze działanie do czasu ich uzupełnienia.
3. Ekspres przygotowuje wybrany napój na podstawie zaprogramowanej sekwencji. Podsystem odpowiedzialny za przygotowanie kawy na bieżąco przygotowuje składniki napoju i wlewa je do szklanki.
4. Ekspres informuje użytkownika o zakończeniu przygotowywania napoju.
5. Uzytkownik zabiera przygotowany napój.

### Model środowiska i interakcji użytkownika z systemem
![1-environment](https://user-images.githubusercontent.com/48785655/174969015-23564e8a-232c-4719-a57b-365e4fbcaf4f.png)

## System `CoffeeMachine`
### Komponenty główne
- `CoffeeMachineSystem`: główny komponent reprezentujący ekspres do kawy, który łączy pomniejsze komponenty w spójną całość
- `main_controller`: procesor główny odpowiedzialny za zarządzanie procesami obsługującymi interakcję systemu z użytkownikiem, a więc wybór napoju (`drink_selection_process`) oraz kontrolę ilości składników potrzebnych do przygotowania wybranego napoju (`supplies_process`)
- `gpio_bus`: połączenia umożliwiające komunikację urządzeń z procesorem

### Komponenty wykonujące
- `butttons`: urządzenie przyjmujące od użytkownika wybór napoju
- `signalizer`: urządzenie sygnalizujące użytkownikowi konieczność uzupełnienia składników podstawowych lub zakończenie procesu przygotowywania napoju

#### Czujniki
- `water_container_sensor`: monitoruje ilość wody w pojemniku
- `coffee_bean_container_sensor`: monitoruje ilość ziaren kawy w pojemniku
- `milk_container_sensor`: monitoruje ilość mleka w pojemniku
### Komponenty programowe
- `drink_selection_process`: proces przetwarzający wybór użytkownika na instrukcję przygotowania napoju dla podsystemu `CoffeeMaker` - kolejność, w której powinny zostać uruchamiane poszczególne urządzenia tego podsystemu
- `supplies_process`: proces sprawdzający, czy w pojemnikach znajduje się wystarczająco dużo składników, aby przygotować wybrany napój. Jeżeli nie, informacja o tym jest przekazywana do `signalizera` odpowiedzialnego za poinformowanie o tym użytkownika, a dalsze działanie systemu zostaje zawieszone.
### Model
![2-cofmachine](https://user-images.githubusercontent.com/48785655/174969239-2457ee37-a893-48b3-85cb-ea43e6e5d142.png)

## System `CoffeeMaker`
### Komponenty główne
- `CoffeeMakerSystem`: podsystem odpowiedzialny za przygotowanie napoju oraz dostarczenie go użytkownikowi
- `coffee_controller`: procesor zarządzający pracą urządzeń podsystemu

### Komponenty sprzętowe
- `analyzer`: urządzenie przetwarzające sygnały przychodzące z zewnątrz na rozkazy przekazywane do określonego urządzenia. Właściwie fukcjonalność ta równie dobrze mogłaby być realizowana przez procesor i zawierać się w procesie `coffe_making_process`, jednak przypisanie jej osobnego komponentu rozjaśnia schemat przepływu danych na narysowanym modelu.
- `heater`: urządzenie odpowiedzialne za podgrzewanie wody / mleka
- `grinder`: młynek do ziaren kawy. Mielenie kawy odbywa się zawsze bezpośrednio przed jej zaparzeniem i przygotowywana jest dokładnie jedna porcja.
- `press`: urządzenie odpowiedzialne za przelewowe zaparzenie zmielonej kawy. Jednorazowo przygotowuje jedną porcję espresso.
- `foamer`: speniacz do mleka
- `pourer`: urządzenie odpowiedzialne za dostarczenie składników do szklanki
#### Czujniki
- `temp_sensor`: monitoruje temperaturę wody i mleka
### Komponenty programowe
- `coffee_making_process`: proces odpowiedzialny za przygotowanie kawy. Odczytuje instrukcje przygotowania napoju i na ich podstawie zarządza poszczególnymi wątkami przypisanymi do urządzeń.
### Model
![3-coffee_maker](https://user-images.githubusercontent.com/48785655/174969283-255fef1c-89cc-4def-905b-6a7662f9aa71.png)

## Analizy
### Semantic Checks
#### Port Connection Consistency
- [x] wygenerowany [raport](https://github.com/Ehevi/CoffeeMachine/blob/main/CoffeeMachineProject/model/instances/reports/ConnectionConsistency/CoffeeMachineSystem_CoffeeMachineSystem_impl_Instance__ConnectionConsistency.csv) nie zawiera żadnych błędów (`CoffeeMachineSystem`)
- [x] wygenerowany [raport](https://github.com/Ehevi/CoffeeMachine/blob/main/CoffeeMachineProject/model/coffeeMaker/instances/reports/ConnectionConsistency/CoffeeMakerSubsystem_CoffeeMakerSystem_impl_Instance__ConnectionConsistency.csv) nie zawiera żadnych błędów (`CoffeeMakerSubsystem`)
#### Binding Constraints
![binding-constraints](https://user-images.githubusercontent.com/48785655/174991026-bf454cce-f353-46ad-81fb-48ed6e78b45d.png)

### Model Maintenance
#### Model Statistics
![cofemach](https://user-images.githubusercontent.com/48785655/174992064-6ed6aaaa-f8af-4f2a-8a9d-fe400e45f7f0.png)
![model-elements](https://user-images.githubusercontent.com/48785655/174990698-f80dfc2b-b213-4a8f-aaa6-45a22fbdeb4c.png)

","layered architecture, microservices architecture"
https://github.com/Wojonatior/libScraper,,
https://github.com/paolo-crisafulli/alisa-response-time,"# alisa-response-time
Repo illustrating integration issues between Alisa and latency analyses (using Osate for AADL models)

It is a fork of https://gist.github.com/paolo-crisafulli/8310d73e3af3d35f24e8fedf4b7b58a2, which was created to illustrate https://github.com/osate/alisa/issues/56
",N/A
https://github.com/sprocter/ErrorTypeLibrary,"# ErrorTypeLibrary
AADL EMV2 error type libraries for MAP component types and implementations
",N/A
https://github.com/HPECLab/tutorials,"# tutorials
项目有关的基础教程，包含aadl，taste，git，github，markdown,相关wiki资料请点击右方[Wiki](https://github.com/HPECLab/tutorials/wiki)
",layered architecture
https://github.com/sabhizakaria/olympus_VFS,,
https://github.com/serban-gg/MCS-Examples,,
https://github.com/scbarrett/890-isolette,"890-isolette
============

Progressive models of the FAA's REMH isolette example for purposes of teaching AADL.

<table>
  <tr>
    <th>Version No.</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>01</td>
    <td>Empty Isolette system type with two implementations</td>
  </tr>
  <tr>
    <td>02</td>
    <td>Minimally defined Thermostat subsystem added as Isolette subcomponent</td>
  </tr>
  <tr>
    <td>03</td>
    <td>Minimally defined physical devices added as Isolette subcomponents</td>
  </tr>
  <tr>
    <td>04</td>
    <td>System &amp; device interfaces defined, but left untyped</td>
  </tr>
  <tr>
    <td>05</td>
    <td>System &amp; device interfaces typed with modeled data entities</td>
  </tr>
  <tr>
    <td>06</td>
    <td>Intra-system connections made among subcomponents</td>
  </tr>
  <tr>
    <td>07</td>
    <td>Use of enumerated &amp; range composite data entities</td>
  </tr>
  <tr>
    <td>08</td>
    <td>Abstract Air component in role as controlled block of Isolette control loop</td>
  </tr>
  <tr>
    <td>09</td>
    <td>Software for Thermostat regulating &amp; monitoring control functionality</td>
  </tr>
  <tr>
    <td>10</td>
    <td>Operator Interface with temperature settings, display &amp; alarm devices</td>
  </tr>
  <tr>
    <td>11</td>
    <td>Software for regulating & monitoring interface, mode, & failure functionality</td>
  </tr>
</table>
","layered architecture, software architecture"
https://github.com/DemoUser683/Authenticator-old-,,
https://github.com/brlarson/DesignSpaceExplorer,"# DesignSpaceExplorer
Generate instance models for particular products from AADL architectures defining a design space comprizing multiple products.
",N/A
https://github.com/miltoncs/AutoModelCheckerGeneration,# thesis,
https://github.com/mpdelbuono/starfish-model,"This library is a part of the Starfish project.

# Starfish Model Library
The Starfish Model Library is an open-source library used for data definition, storage, and processing of models in a variety of languages. The library provides the framework to define objects and their relationships as well as perform analysis on those entities. The library is structured in a way that conforms to the OMG MOF v2 Architecture. While this is potentially limiting (not all modeling languages conform to MOF), it is anticipated that langauges which do not conform can be reasonably adapted to fit into the MOF. This limitation is necessary to reap the analytical benefits of the library (such as the use of OCL) and, in general, appears to be consistent with industry trend.

# Conformance
As this library is still in development, this library does *not* currently conform to the OMG MOF specification. However, there are some principles defined for this project:
1. The target for this library is to meet Complete MOF (CMOF) conformance.
2. Development prioritization will focus on Essential MOF (EMOF) conformance.
3. Until this project supports CMOF, the major version number of this library will remain as ""0"", indicating a pre-release version.

Target versions (and their normative references) are listed below:
* **Meta Object Facility (MOF)**: 2.5.1 ([formal/19-10-01](https://www.omg.org/spec/MOF/2.5.1))
* **XML Metadata Interchange (XMI)**: 2.5.1 ([formal/15-06-07](https://www.omg.org/spec/XMI/2.5.1))
* **Object Constraint Language (OCL)**: 2.4 ([formal/14-02-03](https://www.omg.org/spec/OCL/2.4))


",layered architecture
https://github.com/textworld/FaultToleranceChecker,"Fault Tolerance Checker
===========================
This tool is develped for checking the property of fault tolerance of an AADL model with EMV2 annex.

****

|Author|textworld|
|---|---
|E-mail|text.zwb@gmail.com



Installation
------------

Quick Start
------------
There is a simple [AADL example](https://github.com/meolu/walle-web/blob/master/docs/config-git-en.md)


Change Log
------------",Layered architecture
https://github.com/abidmehmood/smart-street-lights,"# smart-street-lights
The repository contains the AADL and AO4AADL models for the implementation of Smart Street Lights case study. 
",N/A
https://github.com/RileyAbr/CSCI445-Adventium-Labs-GUMBO-Plugin-2021,"# CSCI445-Adventium-2021

This Eclipse plug-in simplifies the extension of AADL models with AGREE constraints through the use of an error-reducing UI. This project was created for **CSCI 445: Software Projects Capstone**.

---

## Environment Setup

Your environment will need to have the following features installed:

- [Java SDK 1.8](https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html)

- [Eclipse Installer](https://www.eclipse.org/downloads/packages/installer)

- OSATE
  1. [OSATE 2.7.0](https://osate-build.sei.cmu.edu/download/osate/stable/2.7.0/)

  2. [AGREE plugin 2.5.2-RELEASE](https://github.com/loonwerks/AGREE/releases/tag/2.5.2-RELEASE)

---

## Installation

Once the environment is set up, follow these steps:

1. Download [Plugin](https://github.com/RileyAbr/CSCI445-Adventium-2021/blob/main/AGREE_Statement_Builder_Download.zip)
2. Extract the file downloaded
3. Click ""Install New Software"" in the ""Help"" tab in OSATE\
![Install New Software](/screenshots/installation_help_install.png)
4. In the Install window click ""Add...""\
![Add](/screenshots/installation_install_window.png)
5. Select Local and select the extracted file.\
![Local](/screenshots/add_local.png)
6. Add a name and Click ""Add""!
7. Check the box on AGREE_Statement_Builder
8. Uncheck the Box “Contact all update sites during install to find required software”
9. Click ""Next""\
![AGREE Statement Builder](/screenshots/check_agree.png)
10. Accept the Licensing Agreement and Click ""Finish""\
![Accept Licensing Agreement](/screenshots/accept_license.png)
11. Click ""Install anyway""\
![Install Anyway](/screenshots/install_anyway.png)
12. Click ""Restart Now""\
![Restart Now](/screenshots/restart_now.png)
13. Plugin tab should be visible on restart.\
![Now Available](/screenshots/now_available.png)

---

## Usage

Follow these steps to properly run the plug-in:

1. Specify the file path of the project:\
![Specify Directory](/screenshots/directory_spec.png)
2. Import an AADL file into the Eclipse workspace.
    - Default path for existing model:
      1. Right click the AADL Navigator.\
      ![Right Click](/screenshots/right_click.png)
      2. Click ""Import..."".
      3. Open General->Projects from Folder or Archive in the Import Wizard.\
      ![Import Wizard](/screenshots/import_wizard.png)
      4. Click the ""Directory"" button and select the file path in the newly opened window.
      5. Click the ""Finish"" button
3. Click on the AADL file so that it is highlighted and selected in the project explorer.
4. Click the ""Check Model"" tab in the toolbar at the top of the editor.\
![Now Available](/screenshots/now_available.png)
5. Follow the labels in the UI until you reach the ""Output"" screen. You have two options in both the ""Assumptions"" screen and the ""Guarantees"" screen:
    1. Use the dropdown menus with the variables and operators predefined.\
    ![Assumptions Custom Button](/screenshots/assumptions_custom.png)\
    ![Guarantees Custom Button](/screenshots/guarantees_custom.png)
    2. Click the ""Custom Statement"" button if you have a more complex constraints to add to the AGREE model.\
    ![Assumptions Custom Open](/screenshots/assumptions_custom_open.png)
6. Copy and paste the ""Output"" into the selected model.\
![Output](/screenshots/output.png)
7. Click ""Finish"" then click ""Okay"" in the ""Success"" window.\
![Success](/screenshots/successful_write.png)

---

## Demo

You can view the following demonstration materials to see this OSATE plug-in in action.

### Demo Video

[Demo Video](https://youtu.be/z6oxQwamnps)

### UI Prototype

This project also contains a UI Prototype. This prototype was built during the first sprint for the project, in order to gather feedback from project stakeholders on appearance and workflow. The prototype was developed as a React app. The visual design was created to mimic the default Eclipse style.

The prototype can be viewed live on Netlify at: [https://adventium-gumbo-ui-prototype.netlify.app/](https://adventium-gumbo-ui-prototype.netlify.app/)
",layered architecture
