Software Architectures Used:
- Model-View-Controller (MVC): This repository is an API for aadl Mainlevée, which suggests that it likely follows the MVC architecture. The Model would represent the data and business logic related to aadl Mainlevée, the View would be the user interface (not applicable for API), and the Controller would handle the communication between the Model and the View.

- RESTful Architecture: Since this repository is an API, it is likely designed following RESTful principles. This architecture focuses on making API endpoints accessible via standard HTTP methods, such as GET, POST, PUT, DELETE, etc.

- Microservices Architecture: The API in this repository may also be designed using a microservices architecture, where different functionalities are broken down into smaller, manageable services that communicate with each other through APIs.

- Service-Oriented Architecture (SOA): Another potential architecture used in this repository could be SOA, where the software is divided into loosely coupled services that are independent and can communicate with each other over a network.

Overall, the software architectures used in this repository likely include MVC, RESTful Architecture, Microservices Architecture, and/or Service-Oriented Architecture.